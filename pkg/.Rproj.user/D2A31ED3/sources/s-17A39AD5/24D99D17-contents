## Base-line:
storeb <- blocklist

# Dataset with 1444 nodes
# haplotype library with 329 blocks
# 96.9% coverage, 48.6% overlapping segments

## Reduce overlap
t <- coverage_test(blocklist, type="window", max=1000)
se <- blocklist_startend(blocklist, type="window")
run <- 0
while(max(t)>1){
  run <- run +1 
  print("Run")
  print(run)
  print(length(blocklist))
  

  
  # which position contains the most different blocks
  max_p <- which.max(t)
  indi <- ceiling(max_p / nrow(t))
  window <- max_p - (indi-1)*nrow(t)
  t[window,indi]
  
  # which blocks are there
  candidates <- which(se[,1] <= window & se[,2]>=window)
  for(index in length(candidates):1){
    if(length(intersect(blocklist[[candidates[index]]][[6]], indi))==0){
      candidates <- candidates[-index]
    }
  }
  
  new_blocks <- NULL
  
  main <- blocklist[[candidates[[1]]]][[1]]
  for(index in 2:length(candidates)){
    main <- intersect(main, blocklist[[candidates[[index]]]][[1]])
  }
  
  nodes <- main
  start <- data[[1]][[min(main)]][[1]]
  end <- data[[1]][[max(main)]][[2]]
  infostuff <- NULL
  for(index2 in nodes){
    infostuff <- c(infostuff,    data[[1]][[index2]][[4]] )
  }
  indis <- NULL
  for(index in candidates){
    indis <- c(indis, blocklist[[index]][[6]])
  }
  indis <- sort(unique(indis))
  
  
  new_blocks[[length(new_blocks)+1]] <- list(nodes,start,end,infostuff,length(indis), indis)
  
  upstream <- list()
  downstream <- list()
  
  for(index in 1:length(candidates)){
    upstream[[index]] <- sort(blocklist[[candidates[[index]]]][[1]][blocklist[[candidates[[index]]]][[1]]<min(main)], decreasing = TRUE)
    downstream[[index]] <- blocklist[[candidates[[index]]]][[1]][blocklist[[candidates[[index]]]][[1]]>max(main)]
  }
  
  #upstream blocks
  lblock <- llength(upstream)
  while(max(lblock)>0){
    active_block <- which(lblock>0)
    seg_length <- min(lblock[active_block])
    variants <- matrix(0, nrow=length(active_block), ncol=seg_length)
    active_indi <- NULL
    for(index in 1:length(active_block)){
      variants[index,] <- upstream[[active_block[index]]][1:seg_length]
      active_indi <- c(active_indi, blocklist[[candidates[[active_block[index]]]]][[6]])
    }
    active_indi <- sort(unique(active_indi))
    block_variants <- unique(variants)
    
    for(index in 1:nrow(block_variants)){
      
      nodes <- sort(block_variants[index,])
      start <- data[[1]][[min(block_variants)]][[1]]
      end <- data[[1]][[max(block_variants)]][[2]]
      infostuff <- NULL
      indis <- active_indi
      for(index2 in nodes){
        infostuff <- c(infostuff,    data[[1]][[index2]][[4]] )
        indis <- intersect(indis, data[[1]][[index2]][[5]] )
      }
      
      
      new_blocks[[length(new_blocks)+1]] <- list(nodes,start,end,infostuff,length(indis), indis)
    }
    for(index in active_block){
      upstream[[index]] <- upstream[[index]][-(1:seg_length)]
    }
    lblock <- llength(upstream)
    
  }
  
  # downstream blocks
  lblock <- llength(downstream)
  while(max(lblock)>0){
    active_block <- which(lblock>0)
    seg_length <- min(lblock[active_block])
    variants <- matrix(0, nrow=length(active_block), ncol=seg_length)
    active_indi <- NULL
    for(index in 1:length(active_block)){
      variants[index,] <- downstream[[active_block[index]]][1:seg_length]
      active_indi <- c(active_indi, blocklist[[candidates[[active_block[index]]]]][[6]])
    }
    active_indi <- sort(unique(active_indi))
    block_variants <- unique(variants)
    
    for(index in 1:nrow(block_variants)){
      
      nodes <- sort(block_variants[index,])
      start <- data[[1]][[min(block_variants)]][[1]]
      end <- data[[1]][[max(block_variants)]][[2]]
      infostuff <- NULL
      indis <- active_indi
      for(index2 in nodes){
        infostuff <- c(infostuff,    data[[1]][[index2]][[4]] )
        indis <- intersect(indis, data[[1]][[index2]][[5]] )
      }
      
      
      new_blocks[[length(new_blocks)+1]] <- list(nodes,start,end,infostuff,length(indis), indis)
    }
    for(index in active_block){
      downstream[[index]] <- downstream[[index]][-(1:seg_length)]
    }
    lblock <- llength(downstream)
    
  }
  
  for(index in sort(candidates, decreasing = TRUE)){
    blocklist[[index]] <- NULL
  }
  blocklist <- c(blocklist, new_blocks)
  
  t <- coverage_test(blocklist, type="window", max=1000)
  se <- blocklist_startend(blocklist, type="window")
  
}


t <- coverage_test(blocklist, type="window")
t1 <- coverage_test(storeb, type="window")
mean(t)
mean(t1)

t <- coverage_test(blocklist, type="window", max=100)
t1 <- coverage_test(storeb, type="window", max=100)
mean(t)
mean(t1)

llength <- function(list){
  len <- numeric(length(list))
  for(index in 1:length(list)){
    len[index] <- length(list[[index]])
  }
  return(len)
}
