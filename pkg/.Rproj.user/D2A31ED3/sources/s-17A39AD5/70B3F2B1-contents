cluster <- data[[1]]
blocks <- blocklist

  for(index in 1:length(blocks)){
  
    included_nodes <- blocks[[index]][[1]]
    
    node_id <- length(cluster)+1
    cluster[[node_id]] <- cluster[[min(included_nodes)]]
    cluster[[node_id]]$end <- cluster[[max(included_nodes)]]$end
    cluster[[node_id]]$haplos <- blocks[[index]][[6]]
    cluster[[node_id]]$n_haplo <- blocks[[index]][[5]]
    cluster[[node_id]][[6]] <- cluster[[max(included_nodes)]][[6]]
    cluster[[node_id]] <- calculate_new_transition(cluster, node_id, nwindow, add_e = cluster[[node_id]][[7]][,1], add_a = cluster[[max(included_nodes)]][[6]][,1])
    
    for(modi in included_nodes){
      cluster[[modi]]$haplos <- setdiff(cluster[[modi]]$haplos, blocks[[index]][[6]])
      cluster[[modi]]$n_haplo <- length(cluster[[modi]]$haplos)
      cluster[[modi]] <- calculate_new_transition(cluster, modi, nwindow, add_e=cluster[[modi]][[7]][,1], add_a = cluster[[modi]][[6]][,1])
    }
    
    for(modi in cluster[[node_id]][[6]][,1]){
      if(modi!=0){
        cluster[[modi]] <- calculate_new_transition(cluster, modi, nwindow, add_e = c(cluster[[modi]][[7]][,1], node_id))
      }
    }
    for(modi in cluster[[node_id]][[7]][,1]){
      if(modi!=0){
        cluster[[modi]] <- calculate_new_transition(cluster, modi, nwindow, add_a = c(cluster[[modi]][[6]][,1], node_id))
      }
    }

  
  }

  cluster <- renaming_combi(cluster, nwindow)

  
  iteration <- 1
  index <- 1
  indi <- 501

  cat("Start_CrossMerging_full\n")
  a <- start_end_block(cluster)
  a_old <- NULL
  while((length(a_old)==0 || (nrow(a_old)!=nrow(a)) || prod(a_old==a)==0) && ( length(a_old)==0 || (nrow(a_old)-nrow(a))>min_reduction_cross)){
    a_old <- a
    cat(paste("Iteration", iteration, ":", nodes, "nodes\n"))
    cluster <- crossmerge(cluster, indi, nwindow[index], a, intersect_func=intersect_func)
    cluster <- simple_merge_prob(cluster, indi, nwindow[index])
    a <- start_end_block(cluster)
    nodes <- length(cluster)
    iteration <- iteration + 1
  }
  
  
  nodes <- length(cluster)
  iteration <- 1
  cat("Start_IgnoreSmall\n")
  while((iteration==1 || (nrow(a_old)!=nrow(a)) || prod(a_old==a)==0) && ( iteration==1 || (nrow(a_old)- nrow(a))>min_reduction_neglet)){
    a_old <- a
    cat(paste("Iteration", iteration, ":", nodes, "nodes\n"))
    cluster <- ignore_small_nodes(cluster, indi, nwindow[index], node_min, gap, intersect_func=intersect_func)
    cluster <- simple_merge_prob(cluster, indi, nwindow[index], intersect_func=intersect_func)
    cluster <- crossmerge(cluster, indi, nwindow[index], intersect_func=intersect_func)
    cluster <- simple_merge_prob(cluster, indi, nwindow[index], intersect_func=intersect_func)
    a<- start_end_block(cluster)
    nodes <- length(cluster)
    iteration <- iteration + 1
  }
  