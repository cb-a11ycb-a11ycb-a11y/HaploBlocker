chromo <- 1

load(paste0("NRGene_MAZE_sequence/Imputed_Chr",chromo,".RData"))
load(paste0("NRGene_MAZE_sequence/chr", chromo, "_340.RData"))

nsnp <- nrow(geno_imputed)
indi <- ncol(geno_imputed)

peddata <- matrix("A",nrow=indi, ncol= nsnp*2)

map <- cbind(chromo, paste0("SNP", 1:nsnp),0, as.numeric(data1[,2]))

col <- 1
for(snp in 1:nsnp){
  print(snp)
  replace2 <- which(geno_imputed[snp,]=="1")
  if(length(replace2)>0){
    peddata[replace2,snp*2-1] <- "C"
    peddata[replace2,snp*2] <- "C"
  }
  replace2 <- which(geno_imputed[snp,]==".")
  if(length(replace2)>0){
    peddata[replace2,snp*2-1] <- "0"
    peddata[replace2,snp*2] <- "0"
  }
  
}

ped <- cbind(1, 1:nrow(peddata),0,0,0,0,peddata)
pedname <- paste0("NRGene_MAZE_sequence/chr",chromo,".ped")
write.table(file=pedname, ped, col.names = FALSE, row.names = FALSE, quote=FALSE)
mapname <- paste0("NRGene_MAZE_sequence/chr", chromo,".map")
write.table(file=mapname, map, col.names = FALSE, row.names = FALSE, quote=FALSE)


./plink --noweb --map NRGene_MAZE_sequence/chr1.map --ped NRGene_MAZE_sequence/chr1.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr1.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr2.map --ped NRGene_MAZE_sequence/chr2.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr2.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr3.map --ped NRGene_MAZE_sequence/chr3.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr3.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr4.map --ped NRGene_MAZE_sequence/chr4.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr4.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr5.map --ped NRGene_MAZE_sequence/chr5.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr5.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr6.map --ped NRGene_MAZE_sequence/chr6.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr6.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr7.map --ped NRGene_MAZE_sequence/chr7.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr7.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr8.map --ped NRGene_MAZE_sequence/chr8.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr8.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr9.map --ped NRGene_MAZE_sequence/chr9.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr9.vcf
./plink --noweb --map NRGene_MAZE_sequence/chr10.map --ped NRGene_MAZE_sequence/chr10.ped --maf 0.0001 --recode vcf --out NRGene_MAZE_sequence/chr10.vcf

java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr1.vcf.vcf out=NRGene_MAZE_sequence/beaglechr1.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr2.vcf.vcf out=NRGene_MAZE_sequence/beaglechr2.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr3.vcf.vcf out=NRGene_MAZE_sequence/beaglechr3.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr4.vcf.vcf out=NRGene_MAZE_sequence/beaglechr4.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr5.vcf.vcf out=NRGene_MAZE_sequence/beaglechr5.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr6.vcf.vcf out=NRGene_MAZE_sequence/beaglechr6.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr7.vcf.vcf out=NRGene_MAZE_sequence/beaglechr7.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr8.vcf.vcf out=NRGene_MAZE_sequence/beaglechr8.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr9.vcf.vcf out=NRGene_MAZE_sequence/beaglechr9.vcf nthreads=1
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr10.vcf.vcf out=NRGene_MAZE_sequence/beaglechr10.vcf nthreads=1

java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr1.vcf.vcf out=NRGene_MAZE_sequence/beaglechr1_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr2.vcf.vcf out=NRGene_MAZE_sequence/beaglechr2_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr3.vcf.vcf out=NRGene_MAZE_sequence/beaglechr3_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr4.vcf.vcf out=NRGene_MAZE_sequence/beaglechr4_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr5.vcf.vcf out=NRGene_MAZE_sequence/beaglechr5_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr6.vcf.vcf out=NRGene_MAZE_sequence/beaglechr6_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr7.vcf.vcf out=NRGene_MAZE_sequence/beaglechr7_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr8.vcf.vcf out=NRGene_MAZE_sequence/beaglechr8_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr9.vcf.vcf out=NRGene_MAZE_sequence/beaglechr9_ne1000.vcf nthreads=1 ne=1000
java -jar beagle5.jar gt=NRGene_MAZE_sequence/chr10.vcf.vcf out=NRGene_MAZE_sequence/beaglechr10_ne1000.vcf nthreads=1 ne=1000

imp_dataset <- NULL

for(chromo in 1:10){
  print(chromo)
  data <- read.table(paste0("NRGene_MAZE_sequence/beaglechr", chromo, ".vcf.vcf.gz"))
  data <- as.matrix(data)
  data <- substr(data[,-(1:9)], start=1,stop=1)
  imp_dataset <- rbind(imp_dataset, data)
}
storage.mode(imp_dataset) <- "integer"
imp_dataset <- imp_dataset*2

save("NRGene_MAZE_sequence/beagle_imputed_full.RData", list=c("imp_dataset"))

imp_dataset <- NULL

for(chromo in 1:10){
  print(chromo)
  data <- read.table(paste0("NRGene_MAZE_sequence/beaglechr", chromo, "_ne1000.vcf.vcf.gz"))
  data <- as.matrix(data)
  data <- substr(data[,-(1:9)], start=1,stop=1)
  imp_dataset <- rbind(imp_dataset, data)
}
storage.mode(imp_dataset) <- "integer"
imp_dataset <- imp_dataset*2

save("NRGene_MAZE_sequence/beagle_imputed_full_ne1000.RData", list=c("imp_dataset"))
