{
    "collab_server" : "",
    "contents" : "# Experimental GBLUP\nargs <- commandArgs(TRUE)\n#args <- c(10,0.8,\"KE&PE_joined\", 10)\nblock_min <- as.numeric(args[1])\n\nname <- paste0(\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nsource('ML_REML.r')\nlibrary(BGLR)\n\nlibrary(HaploBlocker)\nlibrary(CHaploBlocker)\nblocklist <- block_calculation(data, min_majorblock=block_min)\nt <- coverage_test(blocklist, indi=501, type=\"snp\")\nt2 <- coverage_test(blocklist, indi=501, type=\"snp\", max=100)\nse <- blocklist_startend(blocklist, type=\"snp\")\nl <- se[,2] - se[,1]\n\nsize <- blocklist_size(blocklist)\n\nmean(se[,2]-se[,1])\nmean(t)\nmean(t2)\n\nZ <- data\nstorage.mode(Z) <- \"numeric\"\nnblocks <- length(blocklist)\n\n\n# Act like it's DHs\n\n\n\n\np_Z <- rowMeans(Z) / 2\n\n\nP_Z <- matrix(2*(p_Z-0.5), nrow=501, ncol=nrow(Z), byrow=TRUE)\n\nZZ <- t(Z)-P_Z- 1\n\n## A <- Z %*% t(Z) / 2 / sum(p_i*(1-p_i))\nG_Z <- tcrossprod(ZZ)/ (2 * sum(p_Z*(1-p_Z)))\n\n\nG_Z <- G_Z/ mean(diag(G_Z))\n\n\nEVD1=eigen(G_Z)\n\n\n\n## Monte Carlo method - Information preserved\nlibrary(sommer)\nsource(\"GenVar_2703.R\")\n\nnRep=500\np <- nrow(Z)\n\nR_preserved=rep(NA,nRep)\nR_preserved_old=rep(NA,nRep)\nR_preserved_alt=rep(NA,nRep)\nR_preserved_old_alt=rep(NA,nRep)\n\nR_added=rep(NA,nRep)\nR_added_old=rep(NA,nRep)\nR_added_alt=rep(NA,nRep)\nR_added_old_alt=rep(NA,nRep)\n\nfor(i in 1:nRep){\n  select <- sample(1:nrow(Z), nblocks)\n  B <- Z[select,]\n  p_B <- rowMeans(B) / 2\n  P_B <- matrix(2*(p_B-0.5), nrow=501, ncol=nrow(B), byrow=TRUE)\n  BB <- t(B) - P_B - 1\n  G_B <- tcrossprod(BB)/ (2 * sum(p_B*(1-p_B)))\n  G_B <- G_B / mean(diag(G_B))\n  q <- nrow(B)\n  b <- rnorm(p)\n\n  y_real  <- scale(t(Z)%*%b) # Simulate Effect based on SNP-data\n\n  lm.blup <- mmer(Y=y_real, X=NULL, Z=list(A=list(K=G_B)), silent=TRUE,\n                  iters=20, tolpar=1e-3,\n                  tolparinv=1e-6) # use sommer package for mixed model solving\n\n  g.hat <- as.vector(lm.blup$u.hat$A)\n  var.b.hat <- as.numeric(lm.blup$var.comp$A)\n  var.e.hat <- as.numeric(lm.blup$var.comp$units)\n\n  var.BLUP <- var.Equi(g.hat=g.hat, G=G_B, var.b.hat=var.b.hat, var.e.hat=var.e.hat)\n\n  R_preserved[i]= var.BLUP[[1]] / (var.BLUP[[1]] + var.e.hat)\n  R_preserved_old[i]= var.BLUP[[4]] / (var.BLUP[[4]] + var.e.hat)\n  R_preserved_alt[i]= var.BLUP[[1]] /   var(y_real)\n  R_preserved_old_alt[i]= var.BLUP[[4]] /   var(y_real)\n  print(c(i, R_preserved[i]))\n\n  save(file=paste0(\"Information7_\",block_min,\"_MAZE_schreck.RData\"), list=c(\"R_preserved\", \"R_preserved_old\", \"R_preserved_alt\", \"R_preserved_old_alt\",\n                                                                            \"R_added\", \"R_added_old\", \"R_added_alt\", \"R_added_old_alt\"))\n\n}\n\n\n\nfor(i in 1:nRep){\n\n  select <- sample(1:nrow(Z), nblocks)\n  B <- Z[select,]\n  p_B <- rowMeans(B) / 2\n  P_B <- matrix(2*(p_B-0.5), nrow=501, ncol=nrow(B), byrow=TRUE)\n  BB <- t(B) - P_B - 1\n  G_B <- tcrossprod(BB)/ (2 * sum(p_B*(1-p_B)))\n  G_B <- G_B / mean(diag(G_B))\n  q <- nrow(B)\n  b <- rnorm(q)\n  y_real  <- scale(t(B)%*%b) # Simulate Effect based on SNP-data\n\n  lm.blup <- mmer(Y=y_real, X=NULL, Z=list(A=list(K=G_Z)), silent=TRUE,\n                  iters=20, tolpar=1e-3,\n                  tolparinv=1e-6) # use sommer package for mixed model solving\n\n  g.hat <- as.vector(lm.blup$u.hat$A)\n  var.b.hat <- as.numeric(lm.blup$var.comp$A)\n  var.e.hat <- as.numeric(lm.blup$var.comp$units)\n\n  var.BLUP <- var.Equi(g.hat=g.hat, G=G_Z, var.b.hat=var.b.hat, var.e.hat=var.e.hat)\n\n  R_added[i]= var.BLUP[[1]] / (var.BLUP[[1]] + var.e.hat)\n  R_added_old[i]= var.BLUP[[4]] / (var.BLUP[[4]] + var.e.hat)\n  R_added_alt[i]= var.BLUP[[1]] /   var(y_real)\n  R_added_old_alt[i]= var.BLUP[[4]] /   var(y_real)\n  print(c(i, R_added[i]))\n\n  save(file=paste0(\"Information7_\",block_min,\"_MAZE_schreck.RData\"), list=c(\"R_preserved\", \"R_preserved_old\", \"R_preserved_alt\", \"R_preserved_old_alt\",\n                                                                            \"R_added\", \"R_added_old\", \"R_added_alt\", \"R_added_old_alt\"))\n}\n\nsave(file=paste0(\"Information7_\",block_min,\"_MAZE_schreck.RData\"), list=c(\"R_preserved\", \"R_preserved_old\", \"R_preserved_alt\", \"R_preserved_old_alt\",\n                                                                          \"R_added\", \"R_added_old\", \"R_added_alt\", \"R_added_old_alt\"))\n\n\n",
    "created" : 1528975120857.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1558940673",
    "id" : "ED69538A",
    "lastKnownWriteTime" : 1528367513,
    "last_content_update" : 1528367513,
    "path" : "C:/Users/tpook/Desktop/schreck_heri2.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled57"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}