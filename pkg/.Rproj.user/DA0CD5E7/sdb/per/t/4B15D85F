{
    "collab_server" : "",
    "contents" : "#' Function to plot a blocklist II\n#'\n#' Function to plot a blocklist. Width of blocks is adjusted according to nr. of haplotypes in the block\n#' @param blocklist blocklist created by blocklist_calculcation algorithm\n#' @param cutoff2 minimum number of blocks to start/end to mark a recombination hotspot (default:5)\n#' @param bound_weighted weighted blocks in the detection of recombination hotspots according to size (default: TRUE)\n#' @param type length measure (default: \"window\" , alt: \"snp\", \"bp\")\n#' @export\n\nblocklist_plot_xsize <- function(blocklist, cutoff2 = 5, bound_weighted=TRUE, type=\"snp\" ){\n  size <- blocklist_size(blocklist)\n  se <- blocklist_startend(blocklist, type=type)\n  nwindow <- max(blocklist_startend(blocklist, type=\"window\"))\n\n  bpstart <- se[,1]\n  bpend <- se[,2]\n\n  switch <- sort(bpstart, decreasing=FALSE, index.return=TRUE)$ix\n  start <- bpstart[switch]\n  end <- bpend[switch]\n  size <- size[switch]\n  plot(0,-100, xlim=c(1,sum(size)), ylim=c(0, max(end)), ylab=type, xlab=\"Indi per Block\")\n  current_value <- 1\n  for(index in 1:length(start)){\n    polygon(c(current_value,current_value+size[index], current_value+ size[index],current_value), c(start[index], start[index], end[index], end[index]))\n    current_value <- current_value + size[index]\n  }\n\n  if(bound_weighted==TRUE){\n    tempest <- numeric(sum(size)*2)\n    sofar <- 0\n    for(index in 1:length(start)){\n      tempest[1:size[index]+sofar] <- start[index]\n      sofar <- sofar + size[index]\n    }\n    for(index in 1:length(start)){\n      tempest[1:size[index]+sofar] <- end[index]\n      sofar <- sofar + size[index]\n    }\n    xy <- density(tempest,bw=5, from=1, to=max(se), n=nwindow)\n\n    candidate <- unique(c(0,(c(0,xy$y[-nwindow])<c(xy$y)) * (c(xy$y)>c(xy$y[-1],0)) * (xy$y > 1/length(start)/2/5/2*cutoff2) * 1:nwindow))[-1]\n\n    abline(h=candidate)\n  } else{\n    xy <- density(c(start,end),bw=5, from=1, to=nwindow, n=nwindow)\n\n    candidate <- unique(c(0,(c(0,xy$y[-nwindow])<c(xy$y)) * (c(xy$y)>c(xy$y[-1],0)) * (xy$y > 1/length(start)/2/5/2*cutoff2) * 1:nwindow))[-1]\n\n    abline(h=candidate)\n  }\n}\n",
    "created" : 1528881441801.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2401223078",
    "id" : "4B15D85F",
    "lastKnownWriteTime" : 1524216569,
    "last_content_update" : 1524216569,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/HaploBlocker/R/blocklist_plot_xsize.R",
    "project_path" : "R/blocklist_plot_xsize.R",
    "properties" : {
        "tempName" : "Untitled4"
    },
    "relative_order" : 93,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}