{
    "collab_server" : "",
    "contents" : "# I know this is super inefficient but was just the fastest way of writing it for me =(\n\nname <- paste0(\"C:/Users/tpook/Desktop/KE\",\"_DH_chromo\",1,\".RData\")\nname <- paste0(\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(CHaploBlocker)\nlibrary(HaploBlocker)\n\na_total <- NULL\nb100_total <- b095_total <- b090_total <- b085_total <- b080_total <- b075_total <- b070_total <- b065_total <- b060_total <- b055_total <- b051_total <- NULL\nblocklist <- block_calculation(data)\nfor(iter in 1:50){\n\n  data1 <- data\n\n  change <- sort(sample(1:nrow(data), nrow(data)/500))\n  se <- blocklist_startend(blocklist, type=\"snp\")\n  noted <- list()\n  noted2 <- list()\n  for(index in 1:length(change)){\n    options <- which(((se[,2]>change[index]) * (se[,1]<change[index]))==1)\n    take <- sample(which(((se[,2]>change[index]) * (se[,1]<change[index]))==1),1)\n    data1[change[index], blocklist[[take]][[6]]] <- rbinom(blocklist[[take]][[5]],1,0.5)*2\n    data1[change[index], -blocklist[[take]][[6]]] <- 0\n    noted[[index]] <- blocklist[[take]][[6]]\n    noted2[[index]] <- 124233\n    for(check in options){\n      if(length(intersect(blocklist[[check]][[6]], blocklist[[take]][[6]]))>0){\n        noted2[[index]] <- unique(c(noted2[[index]], blocklist[[check]][[6]]))\n      }\n    }\n    noted2[[index]] <- noted2[[index]][-1]\n  }\n\n  blocklist1 <- block_calculation(data1)\n\n  a <- matrix(0, nrow=length(blocklist1), ncol=3)\n\n  for(index in 1:length(blocklist1)){\n    se <- blocklist_startend(blocklist1, type=\"snp\")\n    start <- blocklist1[[index]][[2]]$snp\n    end <- blocklist1[[index]][[3]]$snp\n    included <- which(((change<=end)+(change>=start))==2)\n    haplo1 <- NULL\n    haplo2 <- NULL\n\n    if(length(included)>0){\n      freqs <- blocklist1[[index]][[7]]$freq[change[included]-start+1]\n      a[index,] <- c(length(included), sum(freqs<1), sum(freqs<=0.8))\n\n\n    }\n\n\n  }\n\n  a_total <- rbind(a, a_total)\n  print(colSums(a_total))\n\n\n\n  b100 <- b095 <- b090 <- b085 <- b080 <- b075 <- b070 <- b065 <- b060 <- b055 <- b051 <-matrix(0, nrow=length(change), ncol=6)\n  for(index in 1:length(change)){\n    options <- which(((se[,2]>change[index]) * (se[,1]<change[index]))==1)\n\n    haplo100 <- NULL\n    haplo095 <- NULL\n    haplo090 <- NULL\n    haplo085 <- NULL\n    haplo080 <- NULL\n    haplo075 <- NULL\n    haplo070 <- NULL\n    haplo065 <- NULL\n    haplo060 <- NULL\n    haplo055 <- NULL\n    haplo051 <- NULL\n\n    for(option in options){\n      start <- blocklist1[[option]][[2]]$snp\n      end <- blocklist1[[option]][[3]]$snp\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<1){\n        haplo100 <- unique(c(haplo100, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.95){\n        haplo095 <- unique(c(haplo095, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.9){\n        haplo090 <- unique(c(haplo090, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.85){\n        haplo085 <- unique(c(haplo085, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.8){\n        haplo080 <- unique(c(haplo080, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.75){\n        haplo075 <- unique(c(haplo075, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.7){\n        haplo070 <- unique(c(haplo070, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.65){\n        haplo065 <- unique(c(haplo065, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.6){\n        haplo060 <- unique(c(haplo060, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.55){\n        haplo055 <- unique(c(haplo055, blocklist1[[option]][[6]]))\n      }\n      if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.51){\n        haplo051 <- unique(c(haplo051, blocklist1[[option]][[6]]))\n      }\n    }\n\n    b100[index,] <- c(length(noted[[index]]), length(haplo100), length(base::intersect(haplo100,noted[[index]])),\n                      length(noted2[[index]]), length(haplo100), length(base::intersect(haplo100,noted2[[index]])))\n    b095[index,] <- c(length(noted[[index]]), length(haplo095), length(base::intersect(haplo095,noted[[index]])),\n                      length(noted2[[index]]), length(haplo095), length(base::intersect(haplo095,noted2[[index]])))\n    b090[index,] <- c(length(noted[[index]]), length(haplo090), length(base::intersect(haplo090,noted[[index]])),\n                      length(noted2[[index]]), length(haplo090), length(base::intersect(haplo090,noted2[[index]])))\n    b085[index,] <- c(length(noted[[index]]), length(haplo085), length(base::intersect(haplo085,noted[[index]])),\n                      length(noted2[[index]]), length(haplo085), length(base::intersect(haplo085,noted2[[index]])))\n    b080[index,] <- c(length(noted[[index]]), length(haplo080), length(base::intersect(haplo080,noted[[index]])),\n                      length(noted2[[index]]), length(haplo080), length(base::intersect(haplo080,noted2[[index]])))\n    b075[index,] <- c(length(noted[[index]]), length(haplo075), length(base::intersect(haplo075,noted[[index]])),\n                      length(noted2[[index]]), length(haplo075), length(base::intersect(haplo075,noted2[[index]])))\n    b070[index,] <- c(length(noted[[index]]), length(haplo070), length(base::intersect(haplo070,noted[[index]])),\n                      length(noted2[[index]]), length(haplo070), length(base::intersect(haplo070,noted2[[index]])))\n    b065[index,] <- c(length(noted[[index]]), length(haplo065), length(base::intersect(haplo065,noted[[index]])),\n                      length(noted2[[index]]), length(haplo065), length(base::intersect(haplo065,noted2[[index]])))\n    b060[index,] <- c(length(noted[[index]]), length(haplo060), length(base::intersect(haplo060,noted[[index]])),\n                      length(noted2[[index]]), length(haplo060), length(base::intersect(haplo060,noted2[[index]])))\n    b055[index,] <- c(length(noted[[index]]), length(haplo055), length(base::intersect(haplo055,noted[[index]])),\n                      length(noted2[[index]]), length(haplo055), length(base::intersect(haplo055,noted2[[index]])))\n    b051[index,] <- c(length(noted[[index]]), length(haplo051), length(base::intersect(haplo051,noted[[index]])),\n                      length(noted2[[index]]), length(haplo051), length(base::intersect(haplo051,noted2[[index]])))\n\n  }\n  b100_total <- rbind(b100, b100_total)\n  b095_total <- rbind(b095, b095_total)\n  b090_total <- rbind(b090, b090_total)\n  b085_total <- rbind(b085, b085_total)\n  b080_total <- rbind(b080, b080_total)\n  b075_total <- rbind(b075, b075_total)\n  b070_total <- rbind(b070, b070_total)\n  b065_total <- rbind(b065, b065_total)\n  b060_total <- rbind(b060, b060_total)\n  b055_total <- rbind(b055, b055_total)\n  b051_total <- rbind(b051, b051_total)\n\n}\n\n\ncolSums(b100_total)\n\n\nsave(file=\"b123.RData\", list=c(\"a_total\", \"b100_total\",\n                               \"b095_total\",\"b090_total\",\n                               \"b085_total\",\"b080_total\",\n                               \"b075_total\",\"b070_total\",\n                               \"b065_total\",\"b060_total\",\n                               \"b055_total\", \"b051_total\"))\n",
    "created" : 1531293897340.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1331406590",
    "id" : "30EC5716",
    "lastKnownWriteTime" : 1531301934,
    "last_content_update" : 1531301934915,
    "path" : "C:/Users/tpook/Desktop/Simulations_Fig6.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled75"
    },
    "relative_order" : 78,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}