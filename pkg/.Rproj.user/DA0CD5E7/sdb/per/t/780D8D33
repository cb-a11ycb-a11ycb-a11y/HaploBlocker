{
    "collab_server" : "",
    "contents" : "args <- commandArgs(TRUE)\nrun <- as.numeric(args[1])\nnRep1 <- as.numeric(args[2])\nnRep2 <- as.numeric(args[3])\n\nsource(\"GenVar_2703.R\")\nlibrary(sommer)\n#source(\"C:/Users/tpook/Desktop/GenVar_2703.R\")\nlibrary(BGLR)\ndata(wheat)\nX=wheat.X\nn=nrow(X)\np=ncol(X)\n\n## Monte Carlo Study IID features ##############################################\n prop=c(.1,.2,.5,.7,.9)\n\n R2a=list() # Original inputs\n R2b=list() # Monte Carlo\n R2c=list() # Eigen\n\n for(i in 1:length(prop)){\n \tq=round(prop[i]*ncol(wheat.X))\n\n\tR2a[[i]]=matrix(nrow=q,ncol=nRep1)\n\tR2b[[i]]=matrix(nrow=nRep2,ncol=nRep1)\n\tR2c[[i]]=rep(NA,nRep1)\n\n\n \tfor(j in 1:nRep1){\n \t\tW=matrix(nrow=n,ncol=p,data=rnorm(n*p))\n\t\tcols=sample(1:p,size=q)\n\t\tW[,cols]=wheat.X[,cols]\n\t\tW=scale(W)\n\t\tX=wheat.X[,cols]\n \t\tGx=tcrossprod(scale(X,center=T,scale=F));Gx=Gx/mean(diag(Gx))\n \t\tGw=tcrossprod(scale(W,center=T,scale=F));Gw=Gw/mean(diag(Gw))\n\n\t\tEVDw=eigen(Gw)\n\t\tEVDx=eigen(Gx)\n\n \t\t# original inputs\n\t\tfor(k in 1:ncol(X)){\n\t\t\ty=X[,k]\n\t\t\tlm.blup <-mmer(Y=y, X=NULL, Z=list(A=list(K=Gw)), silent=TRUE,\n\t\t\t               iters=20, tolpar=1e-3,\n\t\t\t               tolparinv=1e-6)\n\n\t\t\tg.hat <- as.vector(lm.blup$u.hat$A)\n\t\t\tvar.b.hat <- as.numeric(lm.blup$var.comp$A)\n\t\t\tvar.e.hat <- as.numeric(lm.blup$var.comp$units)\n\n\t\t\tvar.BLUP <- var.Equi(g.hat=g.hat, G=Gw, var.b.hat=var.b.hat, var.e.hat=var.e.hat)\n\n\t\t\tR2a[[i]][k,j]= var.BLUP[[4]] / (var.BLUP[[4]] + var.e.hat)\n\t\t}\n\n\t\t# Monte Carlo Method\n\t\tfor(k in 1:nRep2){\n\t\t\ta=rnorm(ncol(X))\n\t\t\ty=X%*%a\n\t\t\tlm.blup <-mmer(Y=y, X=NULL, Z=list(A=list(K=Gw)), silent=TRUE,\n\t\t\t               iters=20, tolpar=1e-3,\n\t\t\t               tolparinv=1e-6)\n\n\t\t\tg.hat <- as.vector(lm.blup$u.hat$A)\n\t\t\tvar.b.hat <- as.numeric(lm.blup$var.comp$A)\n\t\t\tvar.e.hat <- as.numeric(lm.blup$var.comp$units)\n\n\t\t\tvar.BLUP <- var.Equi(g.hat=g.hat, G=Gw, var.b.hat=var.b.hat, var.e.hat=var.e.hat)\n\n\t\t\tR2b[[i]][k,j]= var.BLUP[[4]] / (var.BLUP[[4]] + var.e.hat)\n\t\t}\n\n\t\t# Eigenvectors\n\t\tnV=length(EVDw$values)\n\t\ttmp=rep(NA,nV)\n\t\tfor(k in 1:nV){\n\t\t\ty=EVDx$vectors[,k]\n\t\t\tlm.blup <-mmer(Y=y, X=NULL, Z=list(A=list(K=Gw)), silent=TRUE,\n\t\t\t               iters=20, tolpar=1e-3,\n\t\t\t               tolparinv=1e-6)\n\n\t\t\tg.hat <- as.vector(lm.blup$u.hat$A)\n\t\t\tvar.b.hat <- as.numeric(lm.blup$var.comp$A)\n\t\t\tvar.e.hat <- as.numeric(lm.blup$var.comp$units)\n\n\t\t\tvar.BLUP <- var.Equi(g.hat=g.hat, G=Gw, var.b.hat=var.b.hat, var.e.hat=var.e.hat)\n\n\t\t\ttmp[k]= var.BLUP[[4]] / (var.BLUP[[4]] + var.e.hat)\n\t\t}\n\t\tR2c[[i]][j]=sum(tmp*EVDx$values)/sum(EVDx$values)\n\t\tprint(c(i,j))\n\t}\n}\n\nR2a=matrix(nrow=nRep1,data=unlist(lapply(X=R2a,FUN=colMeans)))\nR2b=matrix(nrow=nRep1,data=unlist(lapply(X=R2b,FUN=colMeans)))\nR2c=matrix(nrow=nRep1,data=unlist(R2c))\n\nOUT <- OUT.SD <- matrix(ncol=3,nrow=length(prop))\nrownames(OUT)=prop\ncolnames(OUT)=c('REML-Inputs','MC-method','Eigen')\nOUT[,1]=colMeans(R2a)\nOUT[,2]=colMeans(R2b)\nOUT[,3]=colMeans(R2c)\n\n\nOUT.SD[,1]=apply(FUN=sd,X=R2a,MARGIN=2)\nOUT.SD[,2]=apply(FUN=sd,X=R2b,MARGIN=2)\nOUT.SD[,3]=apply(FUN=sd,X=R2c,MARGIN=2)\n\nname1 <- paste0(\"XonW_\",run,\"_schreck.RData\")\nsave(file=name1, list=c(\"OUT\", \"OUT.SD\", \"R2a\", \"R2b\", \"R2c\"))\n\nwarnings()\n\n\n",
    "created" : 1529327934467.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "433373181",
    "id" : "780D8D33",
    "lastKnownWriteTime" : 1529332896,
    "last_content_update" : 1529332896133,
    "path" : "C:/Users/tpook/Desktop/sim2_XonW_schreck.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 100,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}