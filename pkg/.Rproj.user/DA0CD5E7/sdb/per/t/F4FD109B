{
    "collab_server" : "",
    "contents" : "# Experimental GBLUP\nargs <- commandArgs(TRUE)\n#args <- c(10,0.8,\"KE&PE_joined\", 10)\nblock_min <- as.numeric(args[1])\n\nname <- paste0(\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nsource('ML_REML.r')\nlibrary(BGLR)\n\nlibrary(HaploBlocker)\nlibrary(CHaploBlocker)\nblocklist <- block_calculation(data, block_min_count=block_min)\nt <- coverage_test(blocklist, indi=501, type=\"snp\")\nt2 <- coverage_test(blocklist, indi=501, type=\"snp\", max=100)\nse <- blocklist_startend(blocklist, type=\"snp\")\nl <- se[,2] - se[,1]\n\nsize <- blocklist_size(blocklist)\n\nmean(se[,2]-se[,1])\nmean(t)\nmean(t2)\n\nZ <- data\nstorage.mode(Z) <- \"numeric\"\nnblocks <- length(blocklist)\n\n\n# Act like it's DHs\n\n\n\n\np_Z <- rowMeans(Z) / 2\n\n\nP_Z <- matrix(2*(p_Z-0.5), nrow=501, ncol=nrow(Z), byrow=TRUE)\n\nZZ <- t(Z)-P_Z- 1\n\n## A <- Z %*% t(Z) / 2 / sum(p_i*(1-p_i))\nG_Z <- tcrossprod(ZZ)/ (2 * sum(p_Z*(1-p_Z)))\n\n\nG_Z <- G_Z/ mean(diag(G_Z))\n\n\nEVD1=eigen(G_Z)\n\n\n\n## Monte Carlo method - Information preserved\nlibrary(BGLR)\n\nnRep=100\np <- nrow(Z)\nR_preserved=rep(NA,nRep)\n\nfor(i in 1:nRep){\n  select <- sample(1:nrow(Z), nblocks)\n  B <- Z[select,]\n  p_B <- rowMeans(B) / 2\n  P_B <- matrix(2*(p_B-0.5), nrow=501, ncol=nrow(B), byrow=TRUE)\n  BB <- t(B) - P_B - 1\n  G_B <- tcrossprod(BB)/ (2 * sum(p_B*(1-p_B)))\n  G_B <- G_B / mean(diag(G_B))\n  EVD2=eigen(G_B)\n\n  nPC=sum(EVD2$values>1e-5)\n\n  PC=EVD2\n\n  b=rnorm(p)\n  y=scale(t(Z)%*%b)\n\n  a <- fitREML(y=y, EVD=PC, nSuccess=1, nFailure=1)[[3]]\n  R_preserved[i]=a\n  print(c(i, R_preserved[i]))\n}\n\n## Monte Carlo method - Information added\nlibrary(BGLR)\nnPC=sum(EVD1$values>1e-5)\nPC=EVD1\n\nnRep=100\n\nR_added=rep(NA,nRep)\n\nfor(i in 1:nRep){\n  select <- sample(1:nrow(Z), nblocks)\n  B <- Z[select,]\n  p_B <- rowMeans(B) / 2\n  P_B <- matrix(2*(p_B-0.5), nrow=501, ncol=nrow(B), byrow=TRUE)\n  BB <- t(B) - P_B - 1\n  G_B <- tcrossprod(BB)/ (2 * sum(p_B*(1-p_B)))\n  G_B <- G_B / mean(diag(G_B))\n  EVD2=eigen(G_B)\n\n  p <- nrow(B)\n  b=rnorm(p)\n  y=scale(t(B)%*%b)\n\n  a <- fitREML(y=y, EVD=PC, nSuccess=1, nFailure=1)[[3]]\n  R_added[i]=a\n  print(c(i, R_added[i]))\n}\n\nprint(mean(R_preserved))\nprint(mean(R_added))\n\nsave(file=paste0(\"Information6_\",block_min,\"_SNP_MAZE.RData\"), list=c(\"R_preserved\", \"R_added\"))\n\n\n\n",
    "created" : 1528363684297.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1139061789",
    "id" : "F4FD109B",
    "lastKnownWriteTime" : 1523007265,
    "last_content_update" : 1523007265,
    "path" : "C:/Users/tpook/Desktop/Monte7_501.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled57"
    },
    "relative_order" : 90,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}