{
    "collab_server" : "",
    "contents" : "#' Simple Merge nodes\n#'\n#' Internal Function to calculate transition probabilities for a single node\n#' @param data node-dataset\n#' @param nodes node for which to calculate transition probabilities\n#' @param nwindow number of windows in the dataset\n#' @param add_e additional possible previous nodes\n#' @param add_a additional possible following nodes\n#' @param intersect_func Used intersect-function (internally relevant for computation time)\n#' @export\n\ncalculate_new_transition <- function(data, nodes, nwindow, add_e= NULL, add_a= NULL, intersect_func=intersect){\n  new.nodes <- data[[nodes]]\n  if(new.nodes[[1]]$window>1 && new.nodes[[3]]>0){\n    eingaenge <- sort(unique(c(0, new.nodes[[7]][(new.nodes[[7]][,1]!=0),1], add_e))[-1], decreasing=TRUE)\n    haeufig <- numeric(length(eingaenge))\n    if(length(haeufig)>0){\n      for(index in 1:length(haeufig)){\n        haeufig[index] <- length(intersect_func(data[[eingaenge[index]]][[5]], new.nodes[[5]]))\n      }\n    }\n    eingaenge <- eingaenge[haeufig>0]\n    haeufig <- haeufig[haeufig>0]\n    if(sum(haeufig)< new.nodes[[3]]){\n      new.nodes[[7]] <- rbind(cbind(eingaenge, haeufig), c(0, new.nodes[[3]]- sum(haeufig)))\n    } else{\n      new.nodes[[7]] <- cbind(eingaenge, haeufig)\n    }\n  } else{\n    new.nodes[[7]] <- cbind(0,0)\n  }\n  if(new.nodes[[2]]$window <nwindow && new.nodes[[3]]>0){\n    ausgaenge <- sort(unique(c(0, new.nodes[[6]][(new.nodes[[6]][,1]!=0),1], add_a))[-1], decreasing=TRUE)\n    haeufig <- numeric(length(ausgaenge))\n    if(length(haeufig)>0){\n      for(index in 1:length(haeufig)){\n        haeufig[index] <- length(intersect_func(data[[ausgaenge[index]]][[5]], new.nodes[[5]]))\n      }\n    }\n    ausgaenge <- ausgaenge[haeufig>0]\n    haeufig <- haeufig[haeufig>0]\n    if(sum(haeufig)< new.nodes[[3]]){\n      new.nodes[[6]] <- rbind(cbind(ausgaenge, haeufig), c(0, new.nodes[[3]]- sum(haeufig)))\n    } else{\n      new.nodes[[6]] <- cbind(ausgaenge, haeufig)\n    }\n  } else{\n    new.nodes[[6]] <- cbind(0,0)\n  }\n  return(new.nodes)\n}\n",
    "created" : 1524140853532.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4084655090",
    "id" : "B7C7F9F1",
    "lastKnownWriteTime" : 1524216568,
    "last_content_update" : 1524216568,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/HaploBlocker/R/calculate_new_transition.R",
    "project_path" : "R/calculate_new_transition.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 65,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}