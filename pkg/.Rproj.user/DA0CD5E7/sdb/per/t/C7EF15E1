{
    "collab_server" : "",
    "contents" : "# HaploBlocker Paper calcs\n\nsnps <- numeric(10)\nfor(chromo in 1:10){\n  name <- paste0(\"C:/Users/tpook/Desktop/Genetic_Datasets/Batch3_KEPE/KE_DH_chromo\",chromo,\".RData\")\n  load(name)\n  data1 <- data\n  snps[chromo] <- nrow(data)\n}\n\nt <- read.table(\"C:/Users/tpook/Desktop/MAZE_HaploBlocker2/KE_Block_overview.txt\")\n\nsum(t[,1])\n\nsum(t[,2]*snps)/sum(snps)\nsum(t[,3]*snps)/sum(snps)\n\nt <- read.table(\"C:/Users/tpook/Desktop/MAZE_HaploBlocker2/KE&PE_Block_overview.txt\")\n\nsum(t[,1])\n\nsum(t[,2]*snps)/sum(snps)\nsum(t[,3]*snps)/sum(snps)\n\nl <- NULL\nlibrary(HaploBlocker)\nfor(chromo in 1:10){\n  load(paste0(\"C:/Users/tpook/Desktop/MAZE_HaploBlocker2/KEchromo\",chromo,\"_blocklibrary.RData\"))\n  se <- blocklist_startend(blocklist, type=\"snp\")\n  l <- c(l,se[,2]-se[,1]+1)\n}\nmedian(l)\nmean(l)\n\nname <- paste0(\"C:/Users/tpook/Desktop/Genetic_Datasets/Batch3_KEPE/\",\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(HaploBlocker)\nblocklist <- block_calculation(data, block_min_count = 50, target_coverage = 0.9)\n\nblocklist <- block_calculation(data, block_min_count = 2500)\nprint(length(blocklist))\nse <- blocklist_startend(blocklist, type=\"snp\")\nprint(mean(se[,2]-se[,1]+1))\nt <- coverage_test(blocklist, type=\"snp\", indi=501)\nprint(mean(t))\n\n\nblocklist <- block_calculation(data, weighting_length = 1, weighting_size = 0)\nprint(length(blocklist))\nse <- blocklist_startend(blocklist, type=\"snp\")\nprint(mean(se[,2]-se[,1]+1))\nsize <- blocklist_size(blocklist)\nprint(mean(size))\nt <- coverage_test(blocklist, type=\"snp\", indi=501)\nprint(mean(t))\n\n## 1/1 : 452 / 2575 / 107.5 / 94.2\n## 0.5/1: 500 / 2250 / 130.2 / 94.5\n## 0/1: 875 / 1258 / 174.6 / 95.9\n## 1/0.5: 442 / 2768 / 98.2 / 94.1\n## 1/0: 456 / 2765 / 90.2 / 94.1\n\ndata1 <- data[1:20000,]\nblocklist <- block_calculation(data1)\n\n\nX11(width=18,height = 15)\nplot_block1(blocklist, indi=501)\nsavePlot(file=\"C:/Users/tpook/Desktop/Plot_block.png\", type=\"png\")\n\n\nblock_total <- NULL\n\nrace <- \"KE\"\n\nfor(chromo in 1:10){\n  library(readr)\n  print(chromo)\n  blockset <- read_delim(paste0(\"C:/Users/tpook/Desktop/HaploView/Blocks\",race,\"chromo\",chromo,\"f.blocks.det\"),\n                         \" \", escape_double = FALSE, na = \"NA\",\n                         trim_ws = TRUE)\n  map <- read.table(paste0(\"C:/Users/tpook/Desktop/mapfiles/\",race,\"chromo\",chromo,\"map.map\"))\n  a <- as.matrix(blockset)\n  a[a==\"\"] <- NA\n  set <- matrix(0,nrow=nrow(blockset), ncol=6)\n  for(index in 1:nrow(blockset)){\n    take <- which(!is.na(a[index,]))[1:5]\n    set[index,1:5] <- as.numeric(a[index,take])\n    if(is.na(set[index,5])){\n      set[index,5] <- set[index,4]\n    }\n  }\n  for(lae in 1:nrow(blockset)){\n    start <- which(set[lae,2]==map[,4])\n    stop <- which(set[lae,3]==map[,4])\n    set[lae,6] <- stop-start+1\n  }\n\n  block_total <- rbind(block_total,set)\n}\nsave(file=\"C:/Users/tpook/Desktop/HaploView/KEBlocks.RData\", list=c(\"block_total\"))\n\nblock_total <- NULL\n\nrace <- \"Joined\"\n\nfor(chromo in 1:10){\n  library(readr)\n  print(chromo)\n  blockset <- read_delim(paste0(\"C:/Users/tpook/Desktop/HaploView/Blocks\",race,\"chromo\",chromo,\".blocks.det\"),\n                         \" \", escape_double = FALSE, na = \"NA\",\n                         trim_ws = TRUE)\n  map <- read.table(paste0(\"C:/Users/tpook/Desktop/mapfiles/\",\"KE\",\"chromo\",chromo,\"map.map\"))\n  a <- as.matrix(blockset)\n  a[a==\"\"] <- NA\n  set <- matrix(0,nrow=nrow(blockset), ncol=6)\n  for(index in 1:nrow(blockset)){\n    take <- which(!is.na(a[index,]))[1:5]\n    set[index,1:5] <- as.numeric(a[index,take])\n    if(is.na(set[index,5])){\n      set[index,5] <- set[index,4]\n    }\n  }\n  for(lae in 1:nrow(blockset)){\n    start <- which(set[lae,2]==map[,4])\n    stop <- which(set[lae,3]==map[,4])\n    set[lae,6] <- stop-start+1\n  }\n\n  block_total <- rbind(block_total,set)\n}\nsave(file=\"C:/Users/tpook/Desktop/HaploView/JoinedBlocks.RData\", list=c(\"block_total\"))\n\n\nX11(width=26,height=9)\npar(mfrow=c(1,2))\nl <- NULL\nlibrary(HaploBlocker)\nfor(chromo in 1:10){\n  load(paste0(\"C:/Users/tpook/Desktop/MAZE_HaploBlocker2/KEchromo\",chromo,\"_blocklibrary.RData\"))\n  se <- blocklist_startend(blocklist, type=\"snp\")\n  l <- c(l,se[,2]-se[,1]+1)\n}\nlblock <- l\nhist.data = hist(log(lblock), plot=F, nclass=30)\nplot(hist.data, xaxt=\"n\", xlab=\"block length in SNPs\", main=\"HaploBlocker\",\n     cex.axis=1.2, cex.lab=1.2)\nnr <- c(100,300,1000,3000,10000,30000)\naxis(1, label=nr, at=log(nr))\n\nload(\"C:/Users/tpook/Desktop/HaploView/KEBlocks.RData\")\nlview <- block_total[,6]\nhist.data = hist(log(lview), plot=F, nclass=30)\nplot(hist.data, xaxt=\"n\", xlab=\"block length in SNPs\", main=\"HaploView\",\n     cex.axis=1.2, cex.lab=1.2)\nnr <- c(3,10,30,100)\naxis(1, label=nr, at=log(nr))\n\nsavePlot(file=\"C:/Users/tpook/Desktop/Hist_Blocklength.png\", type=\"png\")\n\n## Schiefe\n\nsdv <- sd(lview)\nsdb <- sd(lblock)\n\n1/length(lview) * sum((lview-mean(lview))^3) / sdv^(3)\n1/length(lblock) * sum((lblock-mean(lblock))^3) / sdb^(3)\n\nlview2 <- log(lview)\nlblock2 <- log(lblock)\n\nsdv <- sd(lview2)\nsdb <- sd(lblock2)\n\n1/length(lview2) * sum((lview2-mean(lview2))^3) / sdv^(3)\n1/length(lblock2) * sum((lblock2-mean(lblock2))^3) / sdb^(3)\n\n\n\n##\nX11(width=8, height=10)\n\nscov1m <- scov2m <- scov3m <- numeric(8)\nup1 <- up2 <- up3 <- down1 <- down2 <- down3 <- numeric(8)\nfor(chromo in 1:10){\n  sample_range <- c(30,50,75,100,150,200,300,400)\n  scov1 <- NULL\n  scov2 <- NULL\n  scov3 <- NULL\n  sd1 <- NULL\n  sd2 <- NULL\n  sd3 <- NULL\n\n  for(sample in sample_range){\n    name <- paste0(\"C:/Users/tpook/Desktop/Small_Sample_test/Chr\", chromo, \"Choosen\",sample, \"LinePENsim50.RData\")\n    load(name)\n    scov1 <- c(scov1, mean(cov1[cov1!=0]))\n    scov2 <- c(scov2, mean(cov2[cov2!=0]))\n    scov3 <- c(scov3, mean(cov3[cov3!=0]))\n    sd1 <- c(sd1, sd(cov1[cov1!=0]))\n    sd2 <- c(sd2, sd(cov2[cov2!=0]))\n    sd3 <- c(sd3, sd(cov3[cov3!=0]))\n  }\n  scov1m <- scov1/10 + scov1m\n  scov2m <- scov2/10 + scov2m\n  scov3m <- scov3/10 + scov3m\n  up1 <- (scov1 + sd1*1.96)/10 + up1\n  up2 <- (scov2 + sd2*1.96)/10 + up2\n  up3 <- (scov3 + sd3*1.96)/10 + up3\n  down1 <- (scov1 - sd1*1.96)/10 + down1\n  down2 <- (scov2 - sd2*1.96)/10 + down2\n  down3 <- (scov3 - sd3*1.96)/10 + down3\n\n  name1 <- paste0(\"Comparison Coverage: Chromosom \", chromo)\n  plot(sample_range, scov3, type=\"l\", ylim=c(min(scov2), 1), lwd=2.5, main=name1, ylab=\"coverage\", xlab=\"training set (of 501)\")\n  lines(sample_range, scov2, col=\"red\", lwd=2.5)\n  legend(\"bottomright\", c(\"training set\", \"test set\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=2)\n  name <- paste0(\"C:/Users/tpook/Desktop/Coverage_Block_Chr\", chromo, \"_12_03.png\")\n  savePlot(name, type=\"png\")\n\n}\nname1 <- paste0(\"Comparison Coverage:\")\nplot(sample_range, scov3m, type=\"l\", ylim=c(min(scov2), 1), lwd=2.5, main=name1, ylab=\"coverage\", xlab=\"training set (of 501)\")\nlines(sample_range, scov2m, col=\"red\", lwd=2.5)\nlegend(\"bottomright\", c(\"training set\", \"test set\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=2)\nname <- paste0(\"C:/Users/tpook/Desktop/Coverage_Block_12_03.png\")\nsavePlot(name, type=\"png\")\n\n\nscov1m <- scov2m <- scov3m <- numeric(8)\nfor(chromo in 1:10){\n  sample_range <- c(30,50,75,100,150,200,300,400)\n  scov1 <- NULL\n  scov2 <- NULL\n  scov3 <- NULL\n\n  for(sample in sample_range){\n    name <- paste0(\"C:/Users/tpook/Desktop/Small_Sample_test/Chr\", chromo, \"Choosen\",sample, \"LinePENsim50_tarcov0.9.RData\")\n    load(name)\n    scov1 <- c(scov1, mean(cov1[cov1!=0]))\n    scov2 <- c(scov2, mean(cov2[cov2!=0]))\n    scov3 <- c(scov3, mean(cov3[cov3!=0]))\n  }\n  scov1m <- scov1/10 + scov1m\n  scov2m <- scov2/10 + scov2m\n  scov3m <- scov3/10 + scov3m\n\n  name1 <- paste0(\"Comparison Coverage: Chromosom \", chromo)\n  plot(sample_range, scov3, type=\"l\", ylim=c(min(scov2), 1), lwd=2.5, main=name1, ylab=\"coverage\", xlab=\"training set (of 501)\")\n  lines(sample_range, scov2, col=\"red\", lwd=2.5)\n  legend(\"bottomright\", c(\"training set\", \"test set\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=2)\n  name <- paste0(\"C:/Users/tpook/Desktop/Coverage_Block_Chr\", chromo, \"_12_03_tarcov.png\")\n  savePlot(name, type=\"png\")\n\n}\nname1 <- paste0(\"Comparison Coverage:\")\nplot(sample_range, scov3m, type=\"l\", ylim=c(min(scov2), 1), lwd=2.5, main=name1, ylab=\"coverage\", xlab=\"training set (of 501)\")\nlines(sample_range, scov2m, col=\"red\", lwd=2.5)\nlegend(\"bottomright\", c(\"training set\", \"test set\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=2)\nname <- paste0(\"C:/Users/tpook/Desktop/Coverage_Block_12_03_tarcov.png\")\nsavePlot(name, type=\"png\")\n\n## JOINED PLOT\n\n\n##\nX11(width=24, height=9)\npar(mfrow=c(1,2))\nscov1m <- scov2m <- scov3m <- numeric(8)\nup1 <- up2 <- up3 <- down1 <- down2 <- down3 <- numeric(8)\nfor(chromo in 1:10){\n  sample_range <- c(30,50,75,100,150,200,300,400)\n  scov1 <- NULL\n  scov2 <- NULL\n  scov3 <- NULL\n  sd1 <- NULL\n  sd2 <- NULL\n  sd3 <- NULL\n\n  for(sample in sample_range){\n    name <- paste0(\"C:/Users/tpook/Desktop/Small_Sample_test/Chr\", chromo, \"Choosen\",sample, \"LinePENsim50.RData\")\n    load(name)\n    scov1 <- c(scov1, mean(cov1[cov1!=0]))\n    scov2 <- c(scov2, mean(cov2[cov2!=0]))\n    scov3 <- c(scov3, mean(cov3[cov3!=0]))\n    sd1 <- c(sd1, sd(cov1[cov1!=0]))\n    sd2 <- c(sd2, sd(cov2[cov2!=0]))\n    sd3 <- c(sd3, sd(cov3[cov3!=0]))\n  }\n  scov1m <- scov1/10 + scov1m\n  scov2m <- scov2/10 + scov2m\n  scov3m <- scov3/10 + scov3m\n  up1 <- (scov1 + sd1*1.96)/10 + up1\n  up2 <- (scov2 + sd2*1.96)/10 + up2\n  up3 <- (scov3 + sd3*1.96)/10 + up3\n  down1 <- (scov1 - sd1*1.96)/10 + down1\n  down2 <- (scov2 - sd2*1.96)/10 + down2\n  down3 <- (scov3 - sd3*1.96)/10 + down3\n\n\n\n}\nname1 <- paste0(\"Default settings:\")\nplot(sample_range, scov3m, type=\"l\", ylim=c(0.4,1), lwd=2.5, main=name1, ylab=\"coverage\", xlab=\"training set (of 501)\"\n     , cex.lab=1.6, cex.main=1.6, cex.axis=1.6)\nlines(sample_range, scov2m, col=\"red\", lwd=2.5)\n\n\n\nscov1m <- scov2m <- scov3m <- numeric(8)\nup1 <- up2 <- up3 <- down1 <- down2 <- down3 <- numeric(8)\nfor(chromo in 1:10){\n  sample_range <- c(30,50,75,100,150,200,300,400)\n  scov1 <- NULL\n  scov2 <- NULL\n  scov3 <- NULL\n  sd1 <- NULL\n  sd2 <- NULL\n  sd3 <- NULL\n\n  for(sample in sample_range){\n    name <- paste0(\"C:/Users/tpook/Desktop/Small_Sample_test/Chr\", chromo, \"Choosen\",sample, \"LinePENsim50_tarcov0.9.RData\")\n    load(name)\n    scov1 <- c(scov1, mean(cov1[cov1!=0]))\n    scov2 <- c(scov2, mean(cov2[cov2!=0]))\n    scov3 <- c(scov3, mean(cov3[cov3!=0]))\n    sd1 <- c(sd1, sd(cov1[cov1!=0]))\n    sd2 <- c(sd2, sd(cov2[cov2!=0]))\n    sd3 <- c(sd3, sd(cov3[cov3!=0]))\n  }\n  scov1m <- scov1/10 + scov1m\n  scov2m <- scov2/10 + scov2m\n  scov3m <- scov3/10 + scov3m\n  up1 <- (scov1 + sd1*1.96)/10 + up1\n  up2 <- (scov2 + sd2*1.96)/10 + up2\n  up3 <- (scov3 + sd3*1.96)/10 + up3\n  down1 <- (scov1 - sd1*1.96)/10 + down1\n  down2 <- (scov2 - sd2*1.96)/10 + down2\n  down3 <- (scov3 - sd3*1.96)/10 + down3\n\n\n}\nname1 <- paste0(\"Fixed coverage in training set:\")\nplot(sample_range, scov3m, type=\"l\", lwd=2.5, main=name1,ylab=\"\", xlab=\"training set (of 501)\", ylim=c(0.4,1),\n     cex.lab=1.6, cex.main=1.6, cex.axis=1.6)\nlines(sample_range, scov2m, col=\"red\", lwd=2.5)\nlegend(\"bottomright\", c(\"training set\", \"test set\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=1.7)\nname <- paste0(\"C:/Users/tpook/Desktop/Coverage_Block_12_03_joined.png\")\nsavePlot(name, type=\"png\")\n\n# Varianten-Zaehler\n\n\nrace <- \"KE\"\n\nvariants <- numeric(10)\nfor(chromo in 1:10){\n  block_total <- NULL\n  library(readr)\n  print(chromo)\n  blockset <- read_delim(paste0(\"C:/Users/tpook/Desktop/HaploView/Blocks\",race,\"chromo\",chromo,\"f.blocks.det\"),\n                         \" \", escape_double = FALSE, na = \"NA\",\n                         trim_ws = TRUE)\n  map <- read.table(paste0(\"C:/Users/tpook/Desktop/mapfiles/\",race,\"chromo\",chromo,\"map.map\"))\n  a <- as.matrix(blockset)\n  a[a==\"\"] <- NA\n  set <- matrix(0,nrow=nrow(blockset), ncol=6)\n  for(index in 1:nrow(blockset)){\n    take <- which(!is.na(a[index,]))[1:5]\n    set[index,1:5] <- as.numeric(a[index,take])\n    if(is.na(set[index,5])){\n      set[index,5] <- set[index,4]\n    }\n  }\n  for(lae in 1:nrow(blockset)){\n    start <- which(set[lae,2]==map[,4])\n    stop <- which(set[lae,3]==map[,4])\n    set[lae,6] <- stop-start+1\n    set[lae,2] <- start\n    set[lae,3] <- stop\n  }\n  window_seq <- set[,2:3]\n\n  name <- paste0(\"C:/Users/tpook/Desktop/\",race,\"_DH_chromo\",chromo,\".RData\")\n  load(name)\n  library(CHaploBlocker)\n  library(HaploBlocker)\n  dhm <- data\n  unique.dhm <- unique(as.vector(dhm))\n  fixcoding(unique.dhm)\n  c_dhm <- codeSNPs(dhm)\n\n  blockinfo_out <- blockinfo_calculation3(dhm, window_sequence= window_seq, merging_error = 0,\n                                            c_dhm=c_dhm)\n  bi <- blockinfo_out[[1]]\n\n  for(index in 1:length(bi)){\n    variants[chromo] <- variants[chromo] + length(bi[[index]][[1]])\n  }\n  print(variants)\n\n}\n\n\nrace <- \"KE\"\n\nvariants <- numeric(10)\nfor(chromo in 1:10){\n  block_total <- NULL\n  library(readr)\n  print(chromo)\n  blockset <- read_delim(paste0(\"C:/Users/tpook/Desktop/HaploView/Blocks\",\"Joined\",\"chromo\",chromo,\".blocks.det\"),\n                         \" \", escape_double = FALSE, na = \"NA\",\n                         trim_ws = TRUE)\n  map <- read.table(paste0(\"C:/Users/tpook/Desktop/mapfiles/\",race,\"chromo\",chromo,\"map.map\"))\n  a <- as.matrix(blockset)\n  a[a==\"\"] <- NA\n  set <- matrix(0,nrow=nrow(blockset), ncol=6)\n  for(index in 1:nrow(blockset)){\n    take <- which(!is.na(a[index,]))[1:5]\n    set[index,1:5] <- as.numeric(a[index,take])\n    if(is.na(set[index,5])){\n      set[index,5] <- set[index,4]\n    }\n  }\n  for(lae in 1:nrow(blockset)){\n    start <- which(set[lae,2]==map[,4])\n    stop <- which(set[lae,3]==map[,4])\n    set[lae,6] <- stop-start+1\n    set[lae,2] <- start\n    set[lae,3] <- stop\n  }\n  window_seq <- set[,2:3]\n\n  name <- paste0(\"C:/Users/tpook/Desktop/\",\"KE\",\"_DH_chromo\",chromo,\".RData\")\n  load(name)\n  data1 <- data\n  name <- paste0(\"C:/Users/tpook/Desktop/\",\"PE\",\"_DH_chromo\",chromo,\".RData\")\n  load(name)\n  library(CHaploBlocker)\n  library(HaploBlocker)\n  dhm <- cbind(data1,data)\n  unique.dhm <- unique(as.vector(dhm))\n  fixcoding(unique.dhm)\n  c_dhm <- codeSNPs(dhm)\n\n  blockinfo_out <- blockinfo_calculation3(dhm, window_sequence= window_seq, merging_error = 0,\n                                          c_dhm=c_dhm)\n  bi <- blockinfo_out[[1]]\n\n  for(index in 1:length(bi)){\n    variants[chromo] <- variants[chromo] + length(bi[[index]][[1]])\n  }\n  print(variants)\n\n}\n\n\n\nname <- paste0(\"C:/Users/tpook/Desktop/Genetic_Datasets/Batch3_KEPE/\",\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(HaploBlocker)\n\ndata1 <- data\ndata21 <- data[1:40100*2,]\ndata22 <- data[1:40100*2-1,]\ndata51 <- data[1:16040*5,]\ndata52 <- data[1:16040*5-1,]\ndata53 <- data[1:16040*5-2,]\ndata54 <- data[1:16040*5-3,]\ndata55 <- data[1:16040*5-4,]\ndata101 <- data[1:8020*10,]\ndata102 <- data[1:8020*10-1,]\ndata103 <- data[1:8020*10-2,]\ndata104 <- data[1:8020*10-3,]\ndata105 <- data[1:8020*10-4,]\ndata106 <- data[1:8020*10-5,]\ndata107 <- data[1:8020*10-6,]\ndata108 <- data[1:8020*10-7,]\ndata109 <- data[1:8020*10-8,]\ndata1010 <- data[1:8020*10-9,]\n\ndata401 <- data[1:2005*40,]\ndata402 <- data[1:2005*40-4,]\ndata403 <- data[1:2005*40-8,]\ndata404 <- data[1:2005*40-12,]\ndata405 <- data[1:2005*40-16,]\ndata406 <- data[1:2005*40-20,]\ndata407 <- data[1:2005*40-24,]\ndata408 <- data[1:2005*40-28,]\ndata409 <- data[1:2005*40-32,]\ndata4010 <- data[1:2005*40-36,]\n\n\nb1 <- block_calculation(data1, window_size=50, min_majorblock=5000)\nb21 <- block_calculation(data21, window_size=25, min_majorblock=2500)\nb22 <- block_calculation(data22, window_size=25, min_majorblock=2500)\nb51 <- block_calculation(data51, window_size=10, min_majorblock=1000)\nb52 <- block_calculation(data52, window_size=10, min_majorblock=1000)\nb53 <- block_calculation(data53, window_size=10, min_majorblock=1000)\nb54 <- block_calculation(data54, window_size=10, min_majorblock=1000)\nb55 <- block_calculation(data55, window_size=10, min_majorblock=1000)\nb101 <- block_calculation(data101, window_size=5, min_majorblock=500)\nb102 <- block_calculation(data102, window_size=5, min_majorblock=500)\nb103 <- block_calculation(data103, window_size=5, min_majorblock=500)\nb104 <- block_calculation(data104, window_size=5, min_majorblock=500)\nb105 <- block_calculation(data105, window_size=5, min_majorblock=500)\nb106 <- block_calculation(data106, window_size=5, min_majorblock=500)\nb107 <- block_calculation(data107, window_size=5, min_majorblock=500)\nb108 <- block_calculation(data108, window_size=5, min_majorblock=500)\nb109 <- block_calculation(data109, window_size=5, min_majorblock=500)\nb1010 <- block_calculation(data1010, window_size=5, min_majorblock=500)\n\nb401 <- block_calculation(data401, window_size=5, min_majorblock = 125)\nb402 <- block_calculation(data402, window_size=5, min_majorblock = 125)\nb403 <- block_calculation(data403, window_size=5, min_majorblock = 125)\nb404 <- block_calculation(data404, window_size=5, min_majorblock = 125)\nb405 <- block_calculation(data405, window_size=5, min_majorblock = 125)\nb406 <- block_calculation(data406, window_size=5, min_majorblock = 125)\nb407 <- block_calculation(data407, window_size=5, min_majorblock = 125)\nb408 <- block_calculation(data408, window_size=5, min_majorblock = 125)\nb409 <- block_calculation(data409, window_size=5, min_majorblock = 125)\nb4010 <- block_calculation(data4010, window_size=5, min_majorblock = 125)\n\nb401 <- block_calculation(data401, window_size=5, min_majorblock = 250)\nb402 <- block_calculation(data402, window_size=5, min_majorblock = 250)\nb403 <- block_calculation(data403, window_size=5, min_majorblock = 250)\nb404 <- block_calculation(data404, window_size=5, min_majorblock = 250)\nb405 <- block_calculation(data405, window_size=5, min_majorblock = 250)\nb406 <- block_calculation(data406, window_size=5, min_majorblock = 250)\nb407 <- block_calculation(data407, window_size=5, min_majorblock = 250)\nb408 <- block_calculation(data408, window_size=5, min_majorblock = 250)\nb409 <- block_calculation(data409, window_size=5, min_majorblock = 250)\nb4010 <- block_calculation(data4010, window_size=5, min_majorblock = 250)\n\n\nse1 <- blocklist_startend(b1)\nse21 <- blocklist_startend(b21)\nse22 <- blocklist_startend(b22)\nse51 <- blocklist_startend(b51)\nse52 <- blocklist_startend(b52)\nse53 <- blocklist_startend(b53)\nse54 <- blocklist_startend(b54)\nse55 <- blocklist_startend(b55)\nse101 <- blocklist_startend(b101)\nse102 <- blocklist_startend(b102)\nse103 <- blocklist_startend(b103)\nse104 <- blocklist_startend(b104)\nse105 <- blocklist_startend(b105)\nse106 <- blocklist_startend(b106)\nse107 <- blocklist_startend(b107)\nse108 <- blocklist_startend(b108)\nse109 <- blocklist_startend(b109)\nse1010 <- blocklist_startend(b1010)\n\nse401 <- blocklist_startend(b401)\nse402 <- blocklist_startend(b402)\nse403 <- blocklist_startend(b403)\nse404 <- blocklist_startend(b404)\nse405 <- blocklist_startend(b405)\nse406 <- blocklist_startend(b406)\nse407 <- blocklist_startend(b407)\nse408 <- blocklist_startend(b408)\nse409 <- blocklist_startend(b409)\nse4010 <- blocklist_startend(b4010)\n\nmean(c(length(b1)))\nmean(c(length(b21), length(b22)))\nmean(c(length(b51), length(b52), length(b53), length(b54), length(b55)))\nmean(c(length(b101), length(b102), length(b103), length(b104), length(b105),\n       length(b106), length(b107), length(b108), length(b109), length(b1010)))\nmean(c(length(b401), length(b402), length(b403), length(b404), length(b405),\n       length(b406), length(b407), length(b408), length(b409), length(b4010)))\n\n\nmean(c(coverage_test(b1,501)))\nmean(c(coverage_test(b22,501),coverage_test(b21,501)))\nmean(c(coverage_test(b51,501),coverage_test(b52,501),coverage_test(b53,501),coverage_test(b54,501),coverage_test(b55,501)))\n\nmean(c(coverage_test(b101,501),coverage_test(b102,501),coverage_test(b103,501),coverage_test(b104,501),coverage_test(b105,501),\n       coverage_test(b106,501),coverage_test(b107,501),coverage_test(b108,501),coverage_test(b109,501),coverage_test(b1010,501)))\nmean(c(coverage_test(b401,501),coverage_test(b402,501),coverage_test(b403,501),coverage_test(b404,501),coverage_test(b405,501),\n       coverage_test(b406,501),coverage_test(b407,501),coverage_test(b408,501),coverage_test(b409,501),coverage_test(b4010,501)))\n\n\n\nmean(se1[,2]-se1[,1]+1)*50\nmean(c(se21[,2]-se21[,1]+1,se22[,2]-se22[,1]+1 ))*50\nmean(c(se101[,2]-se101[,1]+1,se102[,2]-se102[,1]+1,\n       se103[,2]-se103[,1]+1,se104[,2]-se104[,1]+1,\n       se105[,2]-se105[,1]+1,se106[,2]-se106[,1]+1,\n       se107[,2]-se107[,1]+1,se108[,2]-se108[,1]+1,\n       se109[,2]-se109[,1]+1,se1010[,2]-se1010[,1]+1))*50\nmean(c(se51[,2]-se51[,1]+1,se52[,2]-se52[,1]+1,\n       se53[,2]-se53[,1]+1,se54[,2]-se54[,1]+1,\n       se55[,2]-se55[,1]+1))*50\nmean(c(se401[,2]-se401[,1]+1,se402[,2]-se402[,1]+1,\n       se403[,2]-se403[,1]+1,se404[,2]-se404[,1]+1,\n       se405[,2]-se405[,1]+1,se406[,2]-se406[,1]+1,\n       se407[,2]-se407[,1]+1,se408[,2]-se408[,1]+1,\n       se409[,2]-se409[,1]+1,se4010[,2]-se4010[,1]+1))*50*4\n\nmean(se51[,2]-se51[,1]+1)\nmean(se52[,2]-se52[,1]+1)\nmean(se53[,2]-se53[,1]+1)\nmean(se54[,2]-se54[,1]+1)\nmean(se55[,2]-se55[,1]+1)\nmean(se101[,2]-se101[,1]+1)\nmean(se102[,2]-se102[,1]+1)\nmean(se103[,2]-se103[,1]+1)\nmean(se104[,2]-se104[,1]+1)\nmean(se105[,2]-se105[,1]+1)\nmean(se106[,2]-se106[,1]+1)\nmean(se107[,2]-se107[,1]+1)\nmean(se108[,2]-se108[,1]+1)\nmean(se109[,2]-se109[,1]+1)\nmean(se1010[,2]-se1010[,1]+1)\n\n\n\n\n\nname <- paste0(\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(CHaploBlocker)\nlibrary(HaploBlocker)\n\na_total <- NULL\n\nfor(iter in 1:50){\n  change <- sort(sample(1:nrow(data), nrow(data)/500))\n\n  tz <- rbinom(length(change)*ncol(data), 1, 0.5)\n\n  data1 <- data\n  data1[change,]  <- tz*2\n  blocklist <- block_calculation(data1)\n\n  a <- matrix(0, nrow=length(blocklist), ncol=3)\n  for(index in 1:length(blocklist)){\n    start <- blocklist[[index]][[2]]$snp\n    end <- blocklist[[index]][[3]]$snp\n    included <- which(((change<=end)+(change>=start))==2)\n\n    if(length(included)>0){\n      freqs <- blocklist[[index]][[7]]$freq[change[included]-start+1]\n      a[index,] <- c(length(included), sum(freqs<1), sum(freqs<=0.8))\n    }\n\n  }\n\n  a_total <- rbind(a, a_total)\n  print(colSums(a_total))\n}\n\n\n\n\nname <- paste0(\"C:/Users/tpook/Desktop/KE\",\"_DH_chromo\",1,\".RData\")\nname <- paste0(\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(CHaploBlocker)\nlibrary(HaploBlocker)\n\na_total <- NULL\nb100_total <- b095_total <- b090_total <- b085_total <- b080_total <- b075_total <- b070_total <- b065_total <- b060_total <- b055_total <- b051_total <- NULL\nblocklist <- block_calculation(data)\nfor(iter in 1:50){\n\ndata1 <- data\n\nchange <- sort(sample(1:nrow(data), nrow(data)/500))\nse <- blocklist_startend(blocklist, type=\"snp\")\nnoted <- list()\nnoted2 <- list()\nfor(index in 1:length(change)){\n  options <- which(((se[,2]>change[index]) * (se[,1]<change[index]))==1)\n  take <- sample(which(((se[,2]>change[index]) * (se[,1]<change[index]))==1),1)\n  data1[change[index], blocklist[[take]][[6]]] <- rbinom(blocklist[[take]][[5]],1,0.5)*2\n  data1[change[index], -blocklist[[take]][[6]]] <- 0\n  noted[[index]] <- blocklist[[take]][[6]]\n  noted2[[index]] <- 124233\n  for(check in options){\n    if(length(intersect(blocklist[[check]][[6]], blocklist[[take]][[6]]))>0){\n      noted2[[index]] <- unique(c(noted2[[index]], blocklist[[check]][[6]]))\n    }\n  }\n  noted2[[index]] <- noted2[[index]][-1]\n}\n\nblocklist1 <- block_calculation(data1)\n\n a <- matrix(0, nrow=length(blocklist1), ncol=3)\n\nfor(index in 1:length(blocklist1)){\n  se <- blocklist_startend(blocklist1, type=\"snp\")\n  start <- blocklist1[[index]][[2]]$snp\n  end <- blocklist1[[index]][[3]]$snp\n  included <- which(((change<=end)+(change>=start))==2)\n  haplo1 <- NULL\n  haplo2 <- NULL\n\n  if(length(included)>0){\n    freqs <- blocklist1[[index]][[7]]$freq[change[included]-start+1]\n    a[index,] <- c(length(included), sum(freqs<1), sum(freqs<=0.8))\n\n\n  }\n\n\n}\n\na_total <- rbind(a, a_total)\nprint(colSums(a_total))\n\n\n\nb100 <- b095 <- b090 <- b085 <- b080 <- b075 <- b070 <- b065 <- b060 <- b055 <- b051 <-matrix(0, nrow=length(change), ncol=6)\nfor(index in 1:length(change)){\n  options <- which(((se[,2]>change[index]) * (se[,1]<change[index]))==1)\n\n  haplo100 <- NULL\n  haplo095 <- NULL\n  haplo090 <- NULL\n  haplo085 <- NULL\n  haplo080 <- NULL\n  haplo075 <- NULL\n  haplo070 <- NULL\n  haplo065 <- NULL\n  haplo060 <- NULL\n  haplo055 <- NULL\n  haplo051 <- NULL\n\n  for(option in options){\n    start <- blocklist1[[option]][[2]]$snp\n    end <- blocklist1[[option]][[3]]$snp\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<1){\n      haplo100 <- unique(c(haplo100, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.95){\n      haplo095 <- unique(c(haplo095, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.9){\n      haplo090 <- unique(c(haplo090, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.85){\n      haplo085 <- unique(c(haplo085, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.8){\n      haplo080 <- unique(c(haplo080, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.75){\n      haplo075 <- unique(c(haplo075, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.7){\n      haplo070 <- unique(c(haplo070, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.65){\n      haplo065 <- unique(c(haplo065, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.6){\n      haplo060 <- unique(c(haplo060, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.55){\n      haplo055 <- unique(c(haplo055, blocklist1[[option]][[6]]))\n    }\n    if((blocklist1[[option]][[7]]$freq[change[index]-start+1])<0.51){\n      haplo051 <- unique(c(haplo051, blocklist1[[option]][[6]]))\n    }\n  }\n\n  b100[index,] <- c(length(noted[[index]]), length(haplo100), length(base::intersect(haplo100,noted[[index]])),\n                 length(noted2[[index]]), length(haplo100), length(base::intersect(haplo100,noted2[[index]])))\n  b095[index,] <- c(length(noted[[index]]), length(haplo095), length(base::intersect(haplo095,noted[[index]])),\n                    length(noted2[[index]]), length(haplo095), length(base::intersect(haplo095,noted2[[index]])))\n  b090[index,] <- c(length(noted[[index]]), length(haplo090), length(base::intersect(haplo090,noted[[index]])),\n                    length(noted2[[index]]), length(haplo090), length(base::intersect(haplo090,noted2[[index]])))\n  b085[index,] <- c(length(noted[[index]]), length(haplo085), length(base::intersect(haplo085,noted[[index]])),\n                    length(noted2[[index]]), length(haplo085), length(base::intersect(haplo085,noted2[[index]])))\n  b080[index,] <- c(length(noted[[index]]), length(haplo080), length(base::intersect(haplo080,noted[[index]])),\n                    length(noted2[[index]]), length(haplo080), length(base::intersect(haplo080,noted2[[index]])))\n  b075[index,] <- c(length(noted[[index]]), length(haplo075), length(base::intersect(haplo075,noted[[index]])),\n                    length(noted2[[index]]), length(haplo075), length(base::intersect(haplo075,noted2[[index]])))\n  b070[index,] <- c(length(noted[[index]]), length(haplo070), length(base::intersect(haplo070,noted[[index]])),\n                    length(noted2[[index]]), length(haplo070), length(base::intersect(haplo070,noted2[[index]])))\n  b065[index,] <- c(length(noted[[index]]), length(haplo065), length(base::intersect(haplo065,noted[[index]])),\n                    length(noted2[[index]]), length(haplo065), length(base::intersect(haplo065,noted2[[index]])))\n  b060[index,] <- c(length(noted[[index]]), length(haplo060), length(base::intersect(haplo060,noted[[index]])),\n                    length(noted2[[index]]), length(haplo060), length(base::intersect(haplo060,noted2[[index]])))\n  b055[index,] <- c(length(noted[[index]]), length(haplo055), length(base::intersect(haplo055,noted[[index]])),\n                    length(noted2[[index]]), length(haplo055), length(base::intersect(haplo055,noted2[[index]])))\n  b051[index,] <- c(length(noted[[index]]), length(haplo051), length(base::intersect(haplo051,noted[[index]])),\n                    length(noted2[[index]]), length(haplo051), length(base::intersect(haplo051,noted2[[index]])))\n\n}\nb100_total <- rbind(b100, b100_total)\nb095_total <- rbind(b095, b095_total)\nb090_total <- rbind(b090, b090_total)\nb085_total <- rbind(b085, b085_total)\nb080_total <- rbind(b080, b080_total)\nb075_total <- rbind(b075, b075_total)\nb070_total <- rbind(b070, b070_total)\nb065_total <- rbind(b065, b065_total)\nb060_total <- rbind(b060, b060_total)\nb055_total <- rbind(b055, b055_total)\nb051_total <- rbind(b051, b051_total)\n\n}\n\n\ncolSums(b100_total)\n\n\nsave(file=\"b123.RData\", list=c(\"a_total\", \"b100_total\",\n                         \"b095_total\",\"b090_total\",\n                         \"b085_total\",\"b080_total\",\n                         \"b075_total\",\"b070_total\",\n                         \"b065_total\",\"b060_total\",\n                         \"b055_total\", \"b051_total\"))\n\n\nload(\"C:/Users/tpook/Desktop/b123.RData\")\n\nct <- c(0.51,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95,1)\ntype1 <- type2 <- type1b <- type2b <-  numeric(length(ct))\n\ntype1[1] <- 1 - (sum(b051_total[,3]) / sum(b051_total[,1]))\ntype2[1] <- (sum(b051_total[,2])-sum(b051_total[,3])) / (50*160*501 - sum(b051_total[,4]))\ntype1b[1] <- 1 - (sum(b051_total[,6]) / sum(b051_total[,4]))\ntype2b[1] <- (sum(b051_total[,5])-sum(b051_total[,6])) / (50*160*501 - sum(b051_total[,4]))\n\ntype1[2] <- 1 - (sum(b055_total[,3]) / sum(b055_total[,1]))\ntype2[2] <- (sum(b055_total[,2])-sum(b055_total[,3])) / (50*160*501 - sum(b055_total[,4]))\ntype1b[2] <- 1 - (sum(b055_total[,6]) / sum(b055_total[,4]))\ntype2b[2] <- (sum(b055_total[,5])-sum(b055_total[,6])) / (50*160*501 - sum(b055_total[,4]))\n\ntype1[3] <- 1 - (sum(b060_total[,3]) / sum(b060_total[,1]))\ntype2[3] <- (sum(b060_total[,2])-sum(b060_total[,3])) / (50*160*501 - sum(b060_total[,4]))\ntype1b[3] <- 1 - (sum(b060_total[,6]) / sum(b060_total[,4]))\ntype2b[3] <- (sum(b060_total[,5])-sum(b060_total[,6])) / (50*160*501 - sum(b060_total[,4]))\n\ntype1[4] <- 1 - (sum(b065_total[,3]) / sum(b065_total[,1]))\ntype2[4] <- (sum(b065_total[,2])-sum(b065_total[,3])) / (50*160*501 - sum(b065_total[,4]))\ntype1b[4] <- 1 - (sum(b065_total[,6]) / sum(b065_total[,4]))\ntype2b[4] <- (sum(b065_total[,5])-sum(b065_total[,6])) / (50*160*501 - sum(b065_total[,4]))\n\ntype1[5] <- 1 - (sum(b070_total[,3]) / sum(b070_total[,1]))\ntype2[5] <- (sum(b070_total[,2])-sum(b070_total[,3])) / (50*160*501 - sum(b070_total[,4]))\ntype1b[5] <- 1 - (sum(b070_total[,6]) / sum(b070_total[,4]))\ntype2b[5] <- (sum(b070_total[,5])-sum(b070_total[,6])) / (50*160*501 - sum(b070_total[,4]))\n\ntype1[6] <- 1 - (sum(b075_total[,3]) / sum(b075_total[,1]))\ntype2[6] <- (sum(b075_total[,2])-sum(b075_total[,3])) / (50*160*501 - sum(b075_total[,4]))\ntype1b[6] <- 1 - (sum(b075_total[,6]) / sum(b075_total[,4]))\ntype2b[6] <- (sum(b075_total[,5])-sum(b075_total[,6])) / (50*160*501 - sum(b075_total[,4]))\n\ntype1[7] <- 1 - (sum(b080_total[,3]) / sum(b080_total[,1]))\ntype2[7] <- (sum(b080_total[,2])-sum(b080_total[,3])) / (50*160*501 - sum(b080_total[,4]))\ntype1b[7] <- 1 - (sum(b080_total[,6]) / sum(b080_total[,4]))\ntype2b[7] <- (sum(b080_total[,5])-sum(b080_total[,6])) / (50*160*501 - sum(b080_total[,4]))\n\ntype1[8] <- 1 - (sum(b085_total[,3]) / sum(b085_total[,1]))\ntype2[8] <- (sum(b085_total[,2])-sum(b085_total[,3])) / (50*160*501 - sum(b085_total[,4]))\ntype1b[8] <- 1 - (sum(b085_total[,6]) / sum(b085_total[,4]))\ntype2b[8] <- (sum(b085_total[,5])-sum(b085_total[,6])) / (50*160*501 - sum(b085_total[,4]))\n\ntype1[9] <- 1 - (sum(b090_total[,3]) / sum(b090_total[,1]))\ntype2[9] <- (sum(b090_total[,2])-sum(b090_total[,3])) / (50*160*501 - sum(b090_total[,4]))\ntype1b[9] <- 1 - (sum(b090_total[,6]) / sum(b090_total[,4]))\ntype2b[9] <- (sum(b090_total[,5])-sum(b090_total[,6])) / (50*160*501 - sum(b090_total[,4]))\n\ntype1[10] <- 1 - (sum(b095_total[,3]) / sum(b095_total[,1]))\ntype2[10] <- (sum(b095_total[,2])-sum(b095_total[,3])) / (50*160*501 - sum(b095_total[,4]))\ntype1b[10] <- 1 - (sum(b095_total[,6]) / sum(b095_total[,4]))\ntype2b[10] <- (sum(b095_total[,5])-sum(b095_total[,6])) / (50*160*501 - sum(b095_total[,4]))\n\ntype1[11] <- 1 - (sum(b100_total[,3]) / sum(b100_total[,1]))\ntype2[11] <- (sum(b100_total[,2])-sum(b100_total[,3])) / (50*160*501 - sum(b100_total[,4]))\ntype1b[11] <- 1 - (sum(b100_total[,6]) / sum(b100_total[,4]))\ntype2b[11] <- (sum(b100_total[,5])-sum(b100_total[,6])) / (50*160*501 - sum(b100_total[,4]))\n\nX11(width = 10, height = 8)\nplot(ct, type1, type=\"l\", ylab=\"error rate\", xlab=\"minimum minor allele frequency to report\",\n     lwd=2.5, cex.axis=1.5, cex.lab=1.5)\nlines(ct, type2, col=\"red\", lwd=2.5)\nlegend(\"topright\", c(\"Type I error\", \"Type II error\"), lty=c(1,1), col=c(1,2), lwd=c(2.5,2.5), cex=1.5)\nsavePlot(\"C:/Users/tpook/Desktop/Error_type.png\", type=\"png\")\n\n\ncheck <- numeric(length(blocklist))\nfor(index in 1:length(blocklist)){\n  check[index] <- mean(blocklist[[index]][[7]]$freq)\n}\n\nplot(blocklist[[100]][[7]]$freq)\n\n\nname <- paste0(\"C:/Users/tpook/Desktop/\",\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(CHaploBlocker)\nlibrary(HaploBlocker)\n\n\nb5 <- block_calculation(data, window_size = 5)\nb10 <- block_calculation(data, window_size = 10)\nb20 <- block_calculation(data, window_size = 20)\nb50 <- block_calculation(data, window_size = 50)\n\n\n\nblocklist <- b50\n\nprint(length(blocklist))\nse <- blocklist_startend(blocklist, type=\"snp\")\nprint(mean(se[,2]-se[,1]+1))\nsize <- blocklist_size(blocklist)\nprint(mean(size))\nt <- coverage_test(blocklist, type=\"snp\", indi=501)\nprint(mean(t))\n\nb201 <- block_calculation(data[1:20000,], window_size = 20)\nse1 <- blocklist_startend(b201, type=\"snp\")\nplot(se1)\n\n\n\nname <- paste0(\"C:/Users/tpook/Desktop/\",\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(CHaploBlocker)\nlibrary(HaploBlocker)\nblocklist <- block_calculation(data, window_size=c(7,11,23,53), multi_window_mode = TRUE)\n\nz <- numeric(length(blocklist))\nfor(index in 1:length(blocklist)){\n  z[index] <- blocklist[[index]][[12]]\n}\n\n\n\n\n\n\nname <- paste0(\"C:/Users/tpook/Desktop/Genetic_Datasets/Batch3_KEPE/\",\"KE\",\"_DH_chromo\",1,\".RData\")\nload(name)\nlibrary(HaploBlocker)\n\ndata1 <- data\ndata21 <- data[1:40100*2,]\ndata22 <- data[1:40100*2-1,]\ndata51 <- data[1:16040*5,]\ndata52 <- data[1:16040*5-1,]\ndata53 <- data[1:16040*5-2,]\ndata54 <- data[1:16040*5-3,]\ndata55 <- data[1:16040*5-4,]\ndata101 <- data[1:8020*10,]\ndata102 <- data[1:8020*10-1,]\ndata103 <- data[1:8020*10-2,]\ndata104 <- data[1:8020*10-3,]\ndata105 <- data[1:8020*10-4,]\ndata106 <- data[1:8020*10-5,]\ndata107 <- data[1:8020*10-6,]\ndata108 <- data[1:8020*10-7,]\ndata109 <- data[1:8020*10-8,]\ndata1010 <- data[1:8020*10-9,]\n\ndata401 <- data[1:2005*40,]\ndata402 <- data[1:2005*40-4,]\ndata403 <- data[1:2005*40-8,]\ndata404 <- data[1:2005*40-12,]\ndata405 <- data[1:2005*40-16,]\ndata406 <- data[1:2005*40-20,]\ndata407 <- data[1:2005*40-24,]\ndata408 <- data[1:2005*40-28,]\ndata409 <- data[1:2005*40-32,]\ndata4010 <- data[1:2005*40-36,]\n\n\nb1 <- block_calculation(data1, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb21 <- block_calculation(data21, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb22 <- block_calculation(data22, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb51 <- block_calculation(data51, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb52 <- block_calculation(data52, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb53 <- block_calculation(data53, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb54 <- block_calculation(data54, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb55 <- block_calculation(data55, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb101 <- block_calculation(data101, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb102 <- block_calculation(data102, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb103 <- block_calculation(data103, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb104 <- block_calculation(data104, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb105 <- block_calculation(data105, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb106 <- block_calculation(data106, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb107 <- block_calculation(data107, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb108 <- block_calculation(data108, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb109 <- block_calculation(data109, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb1010 <- block_calculation(data1010, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\n\nb401 <- block_calculation(data401, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb402 <- block_calculation(data402, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb403 <- block_calculation(data403, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb404 <- block_calculation(data404, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb405 <- block_calculation(data405, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb406 <- block_calculation(data406, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb407 <- block_calculation(data407, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb408 <- block_calculation(data408, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb409 <- block_calculation(data409, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\nb4010 <- block_calculation(data4010, adaptive_mode=TRUE, max_iteration=10, target_coverage = 0.95)\n\n\n\nse1 <- blocklist_startend(b1)\nse21 <- blocklist_startend(b21)\nse22 <- blocklist_startend(b22)\nse51 <- blocklist_startend(b51)\nse52 <- blocklist_startend(b52)\nse53 <- blocklist_startend(b53)\nse54 <- blocklist_startend(b54)\nse55 <- blocklist_startend(b55)\nse101 <- blocklist_startend(b101)\nse102 <- blocklist_startend(b102)\nse103 <- blocklist_startend(b103)\nse104 <- blocklist_startend(b104)\nse105 <- blocklist_startend(b105)\nse106 <- blocklist_startend(b106)\nse107 <- blocklist_startend(b107)\nse108 <- blocklist_startend(b108)\nse109 <- blocklist_startend(b109)\nse1010 <- blocklist_startend(b1010)\n\nse401 <- blocklist_startend(b401)\nse402 <- blocklist_startend(b402)\nse403 <- blocklist_startend(b403)\nse404 <- blocklist_startend(b404)\nse405 <- blocklist_startend(b405)\nse406 <- blocklist_startend(b406)\nse407 <- blocklist_startend(b407)\nse408 <- blocklist_startend(b408)\nse409 <- blocklist_startend(b409)\nse4010 <- blocklist_startend(b4010)\n\nmean(c(length(b1)))\nmean(c(length(b21), length(b22)))\nmean(c(length(b51), length(b52), length(b53), length(b54), length(b55)))\nmean(c(length(b101), length(b102), length(b103), length(b104), length(b105),\n       length(b106), length(b107), length(b108), length(b109), length(b1010)))\nmean(c(length(b401), length(b402), length(b403), length(b404), length(b405),\n       length(b406), length(b407), length(b408), length(b409), length(b4010)))\n\n\nmean(c(coverage_test(b1,501)))\nmean(c(coverage_test(b22,501),coverage_test(b21,501)))\nmean(c(coverage_test(b51,501),coverage_test(b52,501),coverage_test(b53,501),coverage_test(b54,501),coverage_test(b55,501)))\n\nmean(c(coverage_test(b101,501),coverage_test(b102,501),coverage_test(b103,501),coverage_test(b104,501),coverage_test(b105,501),\n       coverage_test(b106,501),coverage_test(b107,501),coverage_test(b108,501),coverage_test(b109,501),coverage_test(b1010,501)))\nmean(c(coverage_test(b401,501),coverage_test(b402,501),coverage_test(b403,501),coverage_test(b404,501),coverage_test(b405,501),\n       coverage_test(b406,501),coverage_test(b407,501),coverage_test(b408,501),coverage_test(b409,501),coverage_test(b4010,501)))\n\n\n\nmean(se1[,2]-se1[,1]+1)\nmean(c(se21[,2]-se21[,1]+1,se22[,2]-se22[,1]+1 ))*2\nmean(c(se101[,2]-se101[,1]+1,se102[,2]-se102[,1]+1,\n       se103[,2]-se103[,1]+1,se104[,2]-se104[,1]+1,\n       se105[,2]-se105[,1]+1,se106[,2]-se106[,1]+1,\n       se107[,2]-se107[,1]+1,se108[,2]-se108[,1]+1,\n       se109[,2]-se109[,1]+1,se1010[,2]-se1010[,1]+1))*10\nmean(c(se51[,2]-se51[,1]+1,se52[,2]-se52[,1]+1,\n       se53[,2]-se53[,1]+1,se54[,2]-se54[,1]+1,\n       se55[,2]-se55[,1]+1))*5\nmean(c(se401[,2]-se401[,1]+1,se402[,2]-se402[,1]+1,\n       se403[,2]-se403[,1]+1,se404[,2]-se404[,1]+1,\n       se405[,2]-se405[,1]+1,se406[,2]-se406[,1]+1,\n       se407[,2]-se407[,1]+1,se408[,2]-se408[,1]+1,\n       se409[,2]-se409[,1]+1,se4010[,2]-se4010[,1]+1))*40\n\nmean(se51[,2]-se51[,1]+1)\nmean(se52[,2]-se52[,1]+1)\nmean(se53[,2]-se53[,1]+1)\nmean(se54[,2]-se54[,1]+1)\nmean(se55[,2]-se55[,1]+1)\nmean(se101[,2]-se101[,1]+1)\nmean(se102[,2]-se102[,1]+1)\nmean(se103[,2]-se103[,1]+1)\nmean(se104[,2]-se104[,1]+1)\nmean(se105[,2]-se105[,1]+1)\nmean(se106[,2]-se106[,1]+1)\nmean(se107[,2]-se107[,1]+1)\nmean(se108[,2]-se108[,1]+1)\nmean(se109[,2]-se109[,1]+1)\nmean(se1010[,2]-se1010[,1]+1)\n\nmean(c(blocklist_size(b1)))\nmean(c(blocklist_size(b22),blocklist_size(b21)))\nmean(c(blocklist_size(b51),blocklist_size(b52),blocklist_size(b53),blocklist_size(b54),blocklist_size(b55)))\n\nmean(c(blocklist_size(b101),blocklist_size(b102),blocklist_size(b103),blocklist_size(b104),blocklist_size(b105),\n       blocklist_size(b106),blocklist_size(b107),blocklist_size(b108),blocklist_size(b109),blocklist_size(b1010)))\nmean(c(blocklist_size(b401),blocklist_size(b402),blocklist_size(b403),blocklist_size(b404),blocklist_size(b405),\n       blocklist_size(b406),blocklist_size(b407),blocklist_size(b408),blocklist_size(b409),blocklist_size(b4010)))\n\n\n\n",
    "created" : 1524040956357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1134538947",
    "id" : "C7EF15E1",
    "lastKnownWriteTime" : 1527593576,
    "last_content_update" : 1527593576,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/HaploBlocker_papercalcs.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}