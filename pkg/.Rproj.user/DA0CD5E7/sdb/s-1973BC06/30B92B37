{
    "collab_server" : "",
    "contents" : "#' Extend-Block\n#'\n#' Function to add additional windows to each block\n#' @param blocklist blocklist created by blocklist_calculcation algorithm\n#' @param window_sequence_list sequence of predefined windows (default: NULL ;per row: start$snp, end$snp, length, length - merging_error, start$bp, end$bp)\n#' @param dataset dataset which variant nr. for each window\n#' @param indi number of haplotypes in the dataset\n#' @param nwindow number of windows in the dataset\n#' @param max_extending_diff Maximum number of windows with different realisation in the block-extending-algorithm\n#' @param extending_ratio Minimum Ratio between windows with one different realisation to multiple in block-extending-algorithm\n#' @export\n\nextend_block <- function(blocklist, indi, nwindow, max_extending_diff=1, extending_ratio=10, dataset, window_sequence_list){\n  prev <- numeric(max(nwindow))\n  extensions_done <- 0\n  for(index in 1:length(blocklist)){\n    activ <- blocklist[[index]]\n\n    #Verlaengerung nach Vorne\n    if(activ[[2]]$window > 1 ){\n\n      diff <- 0\n      same <- 0\n      extension_length <- 0\n      max_diff <- 0\n      position_diff <- NULL\n      position <- activ[[2]]$window -1\n      while(diff <= max_extending_diff && position>0){\n        uniques <- unique(dataset[[activ[[12]]]][position, activ[[6]]])\n        count <- numeric(length(uniques))\n        for(index2 in 1:length(count)){\n          count[index2] <- sum(dataset[[activ[[12]]]][position, activ[[6]]] == uniques[index2])\n        }\n        prev[position] <- uniques[which.max(count)]\n        if(length(uniques)==1){\n          same <- same +1\n        } else{\n          diff <- diff + 1\n          position_diff <- c(position, position_diff)\n        }\n        if(same/diff >= max_diff && length(uniques) == 1){\n          changes <- position_diff\n          extension_length <- activ[[2]]$window - position\n          max_diff <- same/diff\n        }\n        position <- position -1\n      }\n\n      if(max_diff > extending_ratio){\n        extensions_done <- extensions_done +1\n        activ[[2]]$window <- activ[[2]]$window - extension_length\n        activ[[2]]$snp <- window_sequence_list[[activ[[12]]]][activ[[2]]$window,1]\n        activ[[2]]$bp <- window_sequence_list[[activ[[12]]]][activ[[2]]$window,5]\n        text <- paste(\"Extension_\", activ[[2]]$window,\"_\", activ[[2]]$window + extension_length, sep=\"\")\n        activ[[1]] <- c(text, activ[[1]])\n        activ[[4]] <- c(prev[activ[[2]]$window + 1:extension_length -1],activ[[4]])\n\n        if(length(activ)>=8 && length(c(activ[[8]], changes))>0){\n          activ[[8]] <- sort(c(activ[[8]], changes))\n        } else if(length(changes)>0){\n          activ[[8]] <- sort(changes)\n        }\n        blocklist[[index]] <- activ\n      }\n\n    }\n\n    # Verlaengerung nach Hinten\n    activ <- blocklist[[index]]\n    if(activ[[3]]$window < nwindow[[activ[[12]]]] ){\n\n      diff <- 0\n      same <- 0\n      extension_length <- 0\n      max_diff <- 0\n      position_diff <- NULL\n      position <- activ[[3]]$window +1\n      while(diff <= max_extending_diff && position<= nwindow[[activ[[12]]]]){\n        uniques <- unique(dataset[[activ[[12]]]][position, activ[[6]]])\n        count <- numeric(length(uniques))\n        for(index2 in 1:length(count)){\n          count[index2] <- sum(dataset[[activ[[12]]]][position, activ[[6]]] == uniques[index2])\n        }\n        prev[position] <- uniques[which.max(count)]\n        if(length(uniques)==1){\n          same <- same +1\n        } else{\n          diff <- diff + 1\n          position_diff <- c(position_diff, position)\n        }\n        if(same/diff >= max_diff && length(uniques) == 1){\n          changes <- position_diff\n          extension_length <- position - activ[[3]]$window\n          max_diff <- same/diff\n        }\n        position <- position +1\n      }\n\n      if(max_diff > extending_ratio){\n        extensions_done <- extensions_done +1\n        activ[[3]]$window <- activ[[3]]$window + extension_length\n        activ[[3]]$snp <- window_sequence_list[[activ[[12]]]][activ[[3]]$window,2]\n        activ[[3]]$bp <- window_sequence_list[[activ[[12]]]][activ[[3]]$window,6]\n        text <- paste(\"Extension_\", activ[[3]]$window- extension_length,\"_\", activ[[3]]$window , sep=\"\")\n        activ[[1]] <- c(activ[[1]], text)\n        activ[[4]] <- c(activ[[4]],  prev[activ[[3]]$window + 1:extension_length - extension_length])\n        if(length(activ)>=8 && length(c(activ[[8]], changes))>0){\n          activ[[8]] <- sort(c(activ[[8]], changes))\n        } else if(length(changes)>0){\n          activ[[8]] <- sort(changes)\n        }\n        blocklist[[index]] <- activ\n\n      }\n\n    }\n\n\n\n  }\n\n  return(list(blocklist, extensions_done))\n}\n",
    "created" : 1523359602169.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1765938914",
    "id" : "30B92B37",
    "lastKnownWriteTime" : 1524223374,
    "last_content_update" : 1524223374722,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/HaploBlocker/R/extend_block.R",
    "project_path" : "R/extend_block.R",
    "properties" : {
        "tempName" : "Untitled5"
    },
    "relative_order" : 70,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}