{
    "collab_server" : "",
    "contents" : "#' Comparison of blocklists\n#'\n#' Function compair different blocklists\n#' @param blocklist1 blocklist created by blocklist_calculcation algorithm\n#' @param blocklist2 blocklist created by blocklist_calculcation algorithm\n#' @param type length measure (default: \"window\" , alt: \"snp\", \"bp\")\n#' @param shift switch the positions of the second blocklist (default: 0)\n#' @param turn.around If TRUE turn the results of blocklist2 around\n#' @param indi number of haplotypes in the dataset\n#' @param compair_region Region to compair (default: Every overlapping SNP)\n#' @param intersect_func Used intersect-function (internally relevant for computation time)\n#' @export\n\nblocklist_comparison<- function(blocklist1, blocklist2, indi=NULL, type=\"snp\", compair_region=NULL, shift=0, turn.around=FALSE, intersect_func=intersect){\n\n  if(length(indi)==0){\n    indi <- indi_calc(blocklist1)\n  }\n  se1 <- blocklist_startend(blocklist1, type=type)\n  se2 <- blocklist_startend(blocklist2, type=type)\n  if(turn.around==TRUE){\n\n    se2 <- max(se2[,2]) - se2 + 1\n    se2[,1:2] <- se2[,2:1]\n  }\n  se2 <- se2 + shift\n  if(length(compair_region)==0){\n    compair_region <- max(min(se1[,1]), min(se2[,1])):min(max(se1[,2]), max(se2[,2]))\n  }\n  sim_score <- matrix(0, ncol=length(compair_region), nrow=indi)\n  min_s <- min(compair_region)\n  sim <- matrix(0, nrow=length(blocklist1), ncol=length(blocklist2))\n  for(index1 in 1:length(blocklist1)){\n    for(index2 in 1:length(blocklist2)){\n      inters <- intersect_func(blocklist1[[index1]][[6]], blocklist2[[index2]][[6]])\n      sim[index1,index2] <- length(inters) / length(unique(c(blocklist1[[index1]][[6]], blocklist2[[index2]][[6]])))\n      if(max(se1[index1,1], se2[index2,1])<=min(se1[index1,2], se2[index2,2])){\n        overlap <- max(se1[index1,1], se2[index2,1]):min(se1[index1,2], se2[index2,2])\n      } else{\n        overlap <- NULL\n      }\n      overlap <- intersect_func(overlap, compair_region)\n      old <- sim_score[inters,overlap-min_s+1]\n      old[old<sim[index1,index2]] <- sim[index1,index2]\n      sim_score[inters,overlap-min_s+1] <- old\n    }\n  }\n  t1 <- coverage_test(blocklist1, indi, type=type)[compair_region,]\n  t2 <- coverage_test(blocklist2, indi, type=type)\n  if(turn.around==TRUE){\n    t2 <- t2[nrow(t2):1,]\n  } else{\n    t1 <- coverage_test(blocklist1, indi, type=type)[compair_region+shift,]\n  }\n  t2 <- t2[compair_region,]\n  t_sum <- t(t1+t2)\n  sim_score[t_sum==0] <- 1\n  return(sim_score)\n}\n",
    "created" : 1523366308104.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2837460195",
    "id" : "F6AB50F7",
    "lastKnownWriteTime" : 1524729489,
    "last_content_update" : 1524729489285,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/HaploBlocker/R/blocklist_comparison.R",
    "project_path" : "R/blocklist_comparison.R",
    "properties" : {
        "tempName" : "Untitled7"
    },
    "relative_order" : 74,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}