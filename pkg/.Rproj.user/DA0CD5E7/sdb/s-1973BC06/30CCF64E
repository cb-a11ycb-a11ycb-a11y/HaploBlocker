{
    "collab_server" : "",
    "contents" : "# Experimental GBLUP\nargs <- commandArgs(TRUE)\n#args <- c(10,0.8,\"KE_PE\", 10)\npheno_nr <- as.numeric(args[1])\nincluded <- as.numeric(args[2])\nland <- args[3]\niter <- as.numeric(args[4])\n\nif(land==\"KE_PE\"){\n  land <- \"KE&PE\"\n}\nif(land==\"KE_PE_joined\"){\n  land <- \"KE&PE_joined\"\n}\nif(land==\"PE_KE\"){\n  land <- \"PE&KE\"\n}\nif(land==\"PE_KE_joined\"){\n  land <- \"PE&KE_joined\"\n}\n\nif(land==\"KE&PE\" || land==\"PE&KE\"){\n  name1 <- \"MAZE_HaploBlocker2/KE&PE_blockset.RData\"\n  load(name1)\n} else if(land==\"KE&PE_joined\" || land==\"PE&KE_joined\"){\n  name1 <- \"MAZE_HaploBlocker2/KE&PE_overlap_blockset.RData\"\n  load(name1)\n} else{\n  name1 <- paste0(\"MAZE_HaploBlocker2/\",land,\"_blockset.RData\")\n  load(name1)\n}\n\nif(land==\"KE&PE\" || land==\"PE&KE\" || land==\"PE&KE_joined\" || land==\"KE&PE_joined\"){\n  load(\"PE_DH_SNP_2.RData\")\n  dataset2 <- datas\n  load(\"KE_DH_SNP_2.RData\")\n  dataset2 <- cbind(dataset2,datas)\n} else{\n  name1 <- paste0(land,\"_DH_SNP_2.RData\")\n  load(name1)\n  dataset2 <- datas\n}\njoined1 <- which(duplicated(c(colnames(dataset2), colnames(dataset)))) - ncol(dataset2)\njoined2 <- which(duplicated(c(colnames(dataset), colnames(dataset2)))) - ncol(dataset)\n\ndataset <- dataset[,joined1]\ndataset2 <- dataset2[,joined2]\n\nlibrary(BGLR)\nlibrary(miraculix)\nlibrary(RandomFieldsUtils)\n\npheno <- read.table(\"MAZE_BLUEs_acrossLocations_DHperse2017_v1.csv\", sep=\";\")\npheno <- as.matrix(pheno)\n\nrelevant_dh <- duplicated(c(pheno[,1],colnames(dataset)))[-(1:nrow(pheno))]\ndataset <- dataset[,relevant_dh]\n\nrelevant_pheno <- duplicated(c(colnames(dataset),pheno[,1]))[-(1:ncol(dataset))]\npheno <- pheno[relevant_pheno,]\n\ndataset <- dataset[,sort(colnames(dataset), index.return=TRUE)$ix]\npheno <- pheno[sort(pheno[,1], index.return=TRUE)$ix,]\n\n\nif(max(dataset)==1){\n  Zt <- dataset*2\n} else{\n  Zt <- dataset\n}\nstorage.mode(Zt) <- \"integer\"\nZ_code <- createSNPmatrix(Zt)\nA1 <- relationshipMatrix(Z_code, TRUE, TRUE)\n\nif(max(dataset2)==1){\n  Zt <- dataset2*2\n} else{\n  Zt <- dataset2\n}\nstorage.mode(Zt) <- \"integer\"\nZ_code <- createSNPmatrix(Zt)\nA2 <- relationshipMatrix(Z_code, TRUE, TRUE)\n\n\nETA <- list(list(K=A1, model='RKHS'),\n            list(K=A2, model='RKHS'))\n\ntraining_cor <- numeric(iter)\ntest_cor <- numeric(iter)\nfor(index in 1:iter){\n  y <- y_na <- as.numeric(pheno[,pheno_nr])\n  if(land==\"KE&PE\" || land==\"KE&PE_joined\"){\n    sub <- sample(1:471, 471*included)\n  } else if(land==\"PE&KE\" || land==\"PE&KE_joined\"){\n    sub <- sample(472:873, 402*included)\n  } else{\n    sub <- sample(1:ncol(dataset), ncol(dataset)*included)\n  }\n\n  y_na[-sub] <- NA\n  model <- BGLR(y=y_na, verbose=FALSE, nIter=5000, burnIn=1000, ETA=ETA,\n                saveAt=paste0(\"Trash/joined\",pheno_nr,land))\n  training_cor[index] <- cor(y[sub],model$yHat[sub])\n  if(land==\"KE\" || land==\"PE\"){\n    test_cor[index] <- cor(y[-sub],model$yHat[-sub], use=\"pairwise.complete.obs\")\n  } else if(land==\"KE&PE\" || land==\"KE&PE_joined\"){\n    test_cor[index] <- cor(y[-(1:471)],model$yHat[-(1:471)], use=\"pairwise.complete.obs\")\n  } else{\n    test_cor[index] <- cor(y[-(472:873)],model$yHat[-(472:873)], use=\"pairwise.complete.obs\")\n  }\n\n}\n\n\nname1 <- paste0(\"GBLUP_block_21_02/\", land, \"Pheno\", pheno_nr, \"included\", included, \"_joined.RData\")\nsave(file=name1, list=c(\"training_cor\", \"test_cor\"))\n\n",
    "created" : 1524053516587.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1035834795",
    "id" : "30CCF64E",
    "lastKnownWriteTime" : 1519221792,
    "last_content_update" : 1519221792,
    "path" : "C:/Users/tpook/Desktop/R-Stuff/GBLUP_testing_MAZE_joined_21_02.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 34,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}