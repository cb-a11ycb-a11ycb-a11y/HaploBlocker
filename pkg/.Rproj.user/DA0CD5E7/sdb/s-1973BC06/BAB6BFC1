{
    "collab_server" : "",
    "contents" : "#\nargs <- commandArgs(TRUE)\n#args <- c(\"B73v4\", 1, \"KE\", 0.05)\nref <- args[1]\nmode <- as.numeric(args[2])\nfamily <- args[3]\nmaf <- as.numeric(args[4])\n\nlibrary(HaploBlocker)\nload(paste0(\"Datasets_DHS1_GWAS/\",ref,\"/gpimp_haplo_KlimaFit_S1s_DHsF2AsRef_Beagle4.1_\",ref,\"_v2.RData\"))\ngpimp_ori <- gpimp\n\nfor(scenario in c(\"EINandROG\")){\n  load(paste0(\"Datasets_DHS1_GWAS/\",ref,\"/ID_list_PhenotypedAndGenotyped_S1.RData\"))\n  load(paste0(\"Datasets_DHS1_GWAS/\",ref,\"/MAF0.05_marker_list_\",ref,\"_S1.RData\"))\n  take_indi <- (1:nrow(gpimp$geno))[-which((rownames(gpimp_ori$geno) %in% ID_list[[scenario]]) == FALSE)]\n  take_marker <- (1:ncol(gpimp$geno))[-which((colnames(gpimp_ori$geno) %in% MAF0.05_marker_list[[scenario]][[family]]) == FALSE)]\n\n\ndata <- as.matrix(gpimp$geno)\nstorage.mode(data) <- \"integer\"\ndata <- t(data)\nblockdata <- NULL\nreport <- NULL\nbp_position <- NULL\n    for(chromo in 1:10){\n\n      take <- which(gpimp$map$chr==chromo)\n      take2 <- which(gpimp$covar$family==family)\n      take <- intersect(take, take_marker)\n      take2 <- intersect(take2, take_indi)\n      data1 <- data[take,take2]\n      maf_filter <- round(ncol(data1) * maf)\n      bp_map <- gpimp$map$pos[take]\n\n      if(mode==1){\n        blockl <- block_calculation(data1, edge_min = maf_filter, node_min = maf_filter,\n                                    bp_map=bp_map)\n      } else if(mode==2){\n        blockl <- block_calculation(data1, window_size=c(5,10,20,50), min_majorblock = 1, edge_min = maf_filter, node_min = maf_filter,\n                                    bp_map=bp_map)\n      } else if(mode==3){\n        blockl <- block_calculation(data1, min_majorblock = 20000, edge_min = maf_filter, node_min = maf_filter,\n                                    bp_map=bp_map)\n      } else if(mode==4){\n        blockl <- block_calculation(data1, adaptive_mode = TRUE, edge_min = maf_filter, node_min = maf_filter,\n                                    bp_map=bp_map)\n      }\n\n      t <- coverage_test(blockl)\n      t2 <- coverage_test(blockl, max=Inf)\n      se <- blocklist_startend(blockl)\n      size <- blocklist_size(blockl)\n      report <- rbind(report, c(length(blockl), mean(t), mean(t2), mean(se[,2]-se[,1]+1), mean(size)))\n\n      se_bp <- blocklist_startend(blockl, type=\"bp\")\n      bp_position <- rbind(bp_position, cbind(chromo, se_bp))\n\n\n      chromo_block <- block_matrix_construction(blockl)\n\n      blockdata <- rbind(blockdata, chromo_block)\n      name1 <- paste0(\"Datasets_DHS1_GWAS/\", ref, \"/BlocksHaploBlocker1/S1_\",scenario, \"_Ref\", ref, \"mode\", mode, family, \"chromo\", chromo, \"maf\" ,maf,\".RData\")\n      save(file=name1, list=c(\"blockl\"))\n    }\n    colnames(report) <- c(\"Nr. of blocks\", \"Coverage\", \"Coverage+Overlap\", \"BlockLength\", \"BlockSize\")\n    name1 <- paste0(\"Datasets_DHS1_GWAS/\", ref, \"/BlocksHaploBlocker1/S1_\",scenario, \"_Ref\", ref, \"mode\", mode, family, \"maf\" ,maf, \"_blockmatrix.RData\")\n    colnames(blockdata) <- colnames(data1)\n    save(file=name1, list=c(\"blockdata\"))\n    name1 <- paste0(\"Datasets_DHS1_GWAS/\", ref, \"/BlocksHaploBlocker1/S1_\",scenario, \"_Ref\", ref, \"mode\", mode, family, \"maf\" ,maf, \"_report.txt\")\n    write.table(file=name1, report)\n    name1 <- paste0(\"Datasets_DHS1_GWAS/\", ref, \"/BlocksHaploBlocker1/S1_\",scenario, \"_Ref\", ref, \"mode\", mode, family, \"maf\" ,maf, \"_bp_position.txt\")\n    write.table(file=name1, bp_position)\n}\n\n\n\n\n",
    "created" : 1526485242609.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2404986166",
    "id" : "BAB6BFC1",
    "lastKnownWriteTime" : 1526662409,
    "last_content_update" : 1526662409749,
    "path" : "C:/Users/tpook/Desktop/MayerM_blockdata_S1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 37,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}